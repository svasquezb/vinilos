{
  "src": {
    "app": {
      "app-routing.module.ts": "import { NgModule } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    loadChildren: () => import('./login/login.module').then(m => m.LoginPageModule)\r\n  },\r\n  {\r\n    path: 'register',\r\n    loadChildren: () => import('./register/register.module').then(m => m.RegisterPageModule)\r\n  },\r\n  {\r\n    path: 'home',\r\n    loadChildren: () => import('./home/home.module').then(m => m.HomePageModule)\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'login',\r\n    pathMatch: 'full'\r\n  },\r\n  \r\n  {\r\n    path: 'vinilos',\r\n    loadChildren: () => import('./vinilos/vinilos.module').then( m => m.VinilosPageModule)\r\n  },\r\n\r\n  {\r\n    path: 'register',\r\n    loadChildren: () => import('./register/register.module').then(m => m.RegisterPageModule)\r\n  },\r\n  {\r\n    path: 'login',\r\n    loadChildren: () => import('./login/login.module').then(m => m.LoginPageModule)\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'login',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'vinilo-crud',\r\n    loadChildren: () => import('./vinilo-crud/vinilo-crud.module').then( m => m.ViniloCrudPageModule)\r\n    \r\n  },\r\n  {\r\n    path: 'cart',\r\n    loadChildren: () => import('./cart/cart.module').then( m => m.CartPageModule)\r\n  },\r\n  {\r\n    path: 'profile-edit',\r\n    loadChildren: () => import('./profile-edit/profile-edit.module').then(m => m.ProfileEditPageModule)\r\n  },\r\n  \r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }",
      "app.component.html": "<ion-app>\r\n  <ion-menu contentId=\"main-content\">\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-title>Menu</ion-title>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n    \r\n    <ion-content class=\"ion-padding\">\r\n      <!-- Logo and Title at the top -->\r\n      <div class=\"logo-container\">\r\n        <img src=\"assets/img/icon.png\" alt=\"Logo\" class=\"menu-logo\">\r\n        <span class=\"logo-title\">Vinyls</span>\r\n      </div>\r\n\r\n      <ion-list>\r\n        <ion-item routerLink=\"/home\" routerDirection=\"root\" (click)=\"closeMenu()\">\r\n          <ion-icon name=\"home-outline\" slot=\"start\"></ion-icon>\r\n          <ion-label>Inicio</ion-label>\r\n        </ion-item>\r\n        \r\n        <ion-item routerLink=\"/vinilos\" routerDirection=\"root\" (click)=\"closeMenu()\">\r\n          <ion-icon name=\"disc-outline\" slot=\"start\"></ion-icon>\r\n          <ion-label>Vinilos</ion-label>\r\n        </ion-item>\r\n        \r\n        <ion-item routerLink=\"/cart\" routerDirection=\"root\" (click)=\"closeMenu()\">\r\n          <ion-icon name=\"cart-outline\" slot=\"start\"></ion-icon>\r\n          <ion-label>Carrito</ion-label>\r\n        </ion-item>\r\n\r\n        <ion-item routerLink=\"/vinilo-crud\" routerDirection=\"root\" (click)=\"closeMenu()\">\r\n          <ion-icon name=\"create-outline\" slot=\"start\"></ion-icon>\r\n          <ion-label>Gestionar Vinilos</ion-label>\r\n        </ion-item>\r\n\r\n        <ion-item routerLink=\"/profile-edit\" (click)=\"closeMenu()\">\r\n          <ion-icon name=\"person-outline\" slot=\"start\"></ion-icon>\r\n          <ion-label>Editar Perfil</ion-label>\r\n        </ion-item>\r\n      </ion-list>\r\n    </ion-content>\r\n  </ion-menu>\r\n\r\n  <ion-header>\r\n    <ion-toolbar>\r\n      <ion-buttons slot=\"start\">\r\n        <ion-menu-button></ion-menu-button>\r\n      </ion-buttons>\r\n      <ion-title>Vinyls</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n\r\n  <ion-content>\r\n    <ion-router-outlet id=\"main-content\"></ion-router-outlet>\r\n  </ion-content>\r\n</ion-app>",
      "app.component.scss": "// Variables de colores\r\n$primary-color: #8B4513; // Saddle Brown\r\n$secondary-color: #DEB887; // Burlywood\r\n$accent-color: #CD853F; // Peru\r\n$background-color: #FFF8DC; // Cornsilk\r\n$card-background: #FAEBD7; // Antique White\r\n$text-color: #3E2723; // Dark Brown\r\n$light-text-color: #FFF8DC; // Cornsilk\r\n\r\n@mixin vintage-border {\r\n  border: 2px solid $primary-color;\r\n  box-shadow: 3px 3px 0 rgba($primary-color, 0.5);\r\n}\r\n\r\n// Font global\r\nion-app {\r\n  font-family: 'Georgia', serif;\r\n}\r\n\r\nion-content {\r\n  --background: #{$background-color};\r\n}\r\n\r\n// Menu\r\nion-menu {\r\n  --background: #{$background-color};\r\n\r\n  ion-toolbar {\r\n    --background: #{$primary-color};\r\n    --color: #{$light-text-color};\r\n  }\r\n\r\n  ion-content {\r\n    --padding-top: 0; // Cambiado para que el logo estÃ© arriba\r\n    --padding-bottom: 16px;\r\n  }\r\n\r\n  .logo-container {\r\n    padding: 20px 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: transparent;\r\n    margin-bottom: 20px;\r\n\r\n    .menu-logo {\r\n      width: 100px;\r\n      height: auto;\r\n      border-radius: 10px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n      opacity: 0.9;\r\n      transition: opacity 0.3s ease;\r\n      margin-bottom: 10px;\r\n\r\n      &:hover {\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n    .logo-title {\r\n      color: $text-color;\r\n      font-family: 'Playfair Display', serif;\r\n      font-size: 24px;\r\n      margin-top: 8px;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n\r\n  ion-list {\r\n    background-color: transparent;\r\n  }\r\n\r\n  ion-item {\r\n    --background: transparent;\r\n    --color: #{$text-color};\r\n    --border-color: #{$accent-color};\r\n    \r\n    &:hover {\r\n      --background: #{$secondary-color};\r\n    }\r\n\r\n    ion-icon {\r\n      color: $primary-color;\r\n    }\r\n  }\r\n}\r\n\r\n// Header Styles\r\nion-header {\r\n  ion-toolbar {\r\n    --background: #{$primary-color};\r\n    --color: #{$light-text-color};\r\n  }\r\n\r\n  ion-title {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    font-family: 'Playfair Display', serif;\r\n  }\r\n\r\n  ion-menu-button {\r\n    color: $light-text-color;\r\n  }\r\n}\r\n\r\n// Content Styles\r\nion-router-outlet {\r\n  background-color: $background-color;\r\n}\r\n\r\n// Additional styles for other components\r\nion-card {\r\n  @include vintage-border;\r\n  background-color: $card-background;\r\n  margin: 16px;\r\n\r\n  ion-card-header {\r\n    background-color: $primary-color;\r\n    color: $light-text-color;\r\n  }\r\n\r\n  ion-card-title {\r\n    font-family: 'Playfair Display', serif;\r\n  }\r\n\r\n  ion-card-content {\r\n    color: $text-color;\r\n  }\r\n}\r\n\r\nion-button {\r\n  --background: #{$accent-color};\r\n  --color: #{$light-text-color};\r\n  --border-radius: 0;\r\n  @include vintage-border;\r\n  font-family: 'Georgia', serif;\r\n}\r\n\r\n// Responsive adjustments\r\n@media (max-width: 768px) {\r\n  ion-title {\r\n    font-size: 24px;\r\n  }\r\n\r\n  ion-menu {\r\n    --width: 250px;\r\n  }\r\n}",
      "app.component.spec.ts": "import { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { TestBed } from '@angular/core/testing';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\ndescribe('AppComponent', () => {\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      declarations: [AppComponent],\r\n      schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n    }).compileComponents();\r\n  });\r\n\r\n  it('should create the app', () => {\r\n    const fixture = TestBed.createComponent(AppComponent);\r\n    const app = fixture.componentInstance;\r\n    expect(app).toBeTruthy();\r\n  });\r\n\r\n});\r\n",
      "app.component.ts": "import { Component } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { UserService } from './services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html',\r\n  styleUrls: ['app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  public isLoggedIn: boolean = false;\r\n  public userRole: string = '';\r\n  public userName: string = '';\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private userService: UserService\r\n  ) {\r\n    // Verificar si hay un usuario guardado al iniciar la app\r\n    const currentUser = this.userService.getCurrentUser();\r\n    if (currentUser) {\r\n      this.isLoggedIn = true;\r\n      this.userRole = currentUser.role;\r\n      this.userName = currentUser.firstName;\r\n    }\r\n  }\r\n\r\n  get isAdmin(): boolean {\r\n    return this.userRole === 'admin';\r\n  }\r\n\r\n  login(user: { role: string, firstName: string }) {\r\n    this.isLoggedIn = true;\r\n    this.userRole = user.role;\r\n    this.userName = user.firstName;\r\n  }\r\n\r\n  logout() {\r\n    this.isLoggedIn = false;\r\n    this.userRole = '';\r\n    this.userName = '';\r\n    this.userService.logout();\r\n    this.navCtrl.navigateRoot('/home');\r\n  }\r\n}",
      "app.module.ts": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\n\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n// Importar Capacitor y SQLite\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { CapacitorSQLite } from '@capacitor-community/sqlite';\r\n\r\nimport { DatabaseService } from './services/database.service';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    IonicModule.forRoot(),\r\n    AppRoutingModule\r\n  ],\r\n  providers: [\r\n    DatabaseService,\r\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\r\n    { provide: CapacitorSQLite, useFactory: () => {\r\n      if (Capacitor.isNativePlatform()) {\r\n        return CapacitorSQLite;\r\n      } else {\r\n        // Para entornos web, podrÃ­as usar una implementaciÃ³n alternativa o un mock\r\n        return {};\r\n      }\r\n    }}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}",
      "cart": {
        "cart-routing.module.ts": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CartPage } from './cart.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CartPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CartPageRoutingModule {}\r\n",
        "cart.module.ts": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CartPageRoutingModule } from './cart-routing.module';\r\n\r\nimport { CartPage } from './cart.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    CartPageRoutingModule\r\n  ],\r\n  declarations: [CartPage]\r\n})\r\nexport class CartPageModule {}\r\n",
        "cart.page.html": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>Carrito</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content [fullscreen]=\"true\">\r\n  <ion-list>\r\n    <ion-item *ngFor=\"let vinyl of cart\">\r\n      <ion-thumbnail slot=\"start\">\r\n        <img [src]=\"vinyl.imagen\" />\r\n      </ion-thumbnail>\r\n      <ion-label>\r\n        <h2>{{ vinyl.titulo }}</h2>\r\n        <p>{{ vinyl.artista }}</p>\r\n        <p>Cantidad: {{ vinyl.quantity }}</p>\r\n        <p>Precio: {{ vinyl.precio | currency:'CLP':'symbol-narrow':'1.0-0' }}</p>\r\n      </ion-label>\r\n      <ion-button fill=\"outline\" slot=\"end\" (click)=\"removeItem(vinyl.id)\">\r\n        Eliminar\r\n      </ion-button>\r\n    </ion-item>\r\n  </ion-list>\r\n\r\n  <ion-item *ngIf=\"cart.length > 0\">\r\n    <ion-label>Total:</ion-label>\r\n    <ion-note slot=\"end\">{{ getFormattedTotal() }}</ion-note>\r\n  </ion-item>\r\n\r\n  <ion-button expand=\"block\" color=\"danger\" (click)=\"clearCart()\" *ngIf=\"cart.length > 0\">\r\n    Vaciar Carrito\r\n  </ion-button>\r\n\r\n  <ion-item *ngIf=\"cart.length === 0\">\r\n    <ion-label>El carrito estÃ¡ vacÃ­o</ion-label>\r\n  </ion-item>\r\n</ion-content>",
        "cart.page.scss": "// Variables\r\n$primary-color: #8B4513; // Saddle Brown\r\n$secondary-color: #DEB887; // Burlywood\r\n$accent-color: #CD853F; // Peru\r\n$background-color: #FFF8DC; // Cornsilk\r\n$card-background: #FAEBD7; // Antique White\r\n$text-color: #3E2723; // Dark Brown\r\n$light-text-color: #FFF8DC; // Cornsilk\r\n\r\n// Mixins\r\n@mixin vintage-border {\r\n  border: 2px solid $primary-color;\r\n  box-shadow: 3px 3px 0 rgba($primary-color, 0.5);\r\n}\r\n\r\nion-content {\r\n  --background: #{$background-color};\r\n  font-family: 'Georgia', serif;\r\n}\r\n\r\nion-header ion-toolbar {\r\n  --background: #{$primary-color};\r\n  \r\n  ion-title {\r\n    color: $light-text-color;\r\n    font-family: 'Playfair Display', serif;\r\n    font-size: 1.5em;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2px;\r\n  }\r\n}\r\n\r\nion-list {\r\n  background: transparent;\r\n  padding: 16px;\r\n}\r\n\r\nion-item {\r\n  --background: #{$card-background};\r\n  margin-bottom: 16px;\r\n  @include vintage-border;\r\n\r\n  ion-thumbnail {\r\n    --size: 80px;\r\n    --border-radius: 0;\r\n    @include vintage-border;\r\n    overflow: hidden;\r\n\r\n    img {\r\n      object-fit: cover;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  ion-label {\r\n    h2 {\r\n      font-family: 'Playfair Display', serif;\r\n      color: $primary-color;\r\n      font-size: 1.2em;\r\n      font-weight: bold;\r\n    }\r\n\r\n    p {\r\n      color: $text-color;\r\n      font-style: italic;\r\n    }\r\n  }\r\n\r\n  ion-button {\r\n    --color: #{$primary-color};\r\n    --border-color: #{$primary-color};\r\n    font-family: 'Georgia', serif;\r\n  }\r\n}\r\n\r\nion-item:last-of-type {\r\n  --background: transparent;\r\n  --border-color: transparent;\r\n  box-shadow: none;\r\n\r\n  ion-label, ion-note {\r\n    color: $primary-color;\r\n    font-weight: bold;\r\n    font-size: 1.2em;\r\n  }\r\n}\r\n\r\nion-button[color=\"danger\"] {\r\n  --background: #{$primary-color};\r\n  --color: #{$light-text-color};\r\n  margin: 16px;\r\n  @include vintage-border;\r\n  font-family: 'Georgia', serif;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n\r\n  &:hover {\r\n    --background: #{$accent-color};\r\n  }\r\n}\r\n\r\n.empty-cart {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 200px;\r\n  font-style: italic;\r\n  color: $text-color;\r\n}",
        "cart.page.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { CartPage } from './cart.page';\r\n\r\ndescribe('CartPage', () => {\r\n  let component: CartPage;\r\n  let fixture: ComponentFixture<CartPage>;\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(CartPage);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n",
        "cart.page.ts": "import { Component, OnInit } from '@angular/core';\r\nimport { CartService, CartVinyl } from '../services/cart.service';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.page.html',\r\n  styleUrls: ['./cart.page.scss'],\r\n})\r\nexport class CartPage implements OnInit {\r\n  cart: (CartVinyl & { id: number })[] = [];\r\n  total = 0;\r\n\r\n  constructor(private cartService: CartService) { }\r\n\r\n  ngOnInit() {\r\n    this.cartService.getCart().subscribe((cart) => {\r\n      this.cart = cart.filter(item => item.id !== undefined) as (CartVinyl & { id: number })[];\r\n      this.total = this.cartService.getTotal();\r\n    });\r\n  }\r\n\r\n  getFormattedTotal() {\r\n    return this.total.toLocaleString('es-CL', {\r\n      style: 'currency',\r\n      currency: 'CLP',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0\r\n    });\r\n  }\r\n\r\n  removeItem(vinylId: number | undefined) {\r\n    if (vinylId !== undefined) {\r\n      this.cartService.removeFromCart(vinylId);\r\n    } else {\r\n      console.error('Attempted to remove item with undefined id');\r\n      // Opcionalmente, puedes mostrar un mensaje al usuario\r\n    }\r\n  }\r\n\r\n  clearCart() {\r\n    this.cartService.clearCart();\r\n  }\r\n}"
      },
      "home": {
        "home-routing.module.ts": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomePage } from './home.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomePage,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomePageRoutingModule {}\r\n",
        "home.module.ts": "import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HomePage } from './home.page';\r\nimport { HomePageRoutingModule } from './home-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    HomePageRoutingModule\r\n  ],\r\n  declarations: [HomePage],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA] \r\n})\r\nexport class HomePageModule {}\r\n",
        "home.page.html": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>Vinyls</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-card>\r\n    <img [src]=\"banners[currentBannerIndex]\" alt=\"Banner Image\"/>\r\n  </ion-card>\r\n\r\n  <ion-header>\r\n    <ion-toolbar>\r\n      <ion-title>Â¡MÃ¡s Vendidos!</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n\r\n  <ion-content>\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col size=\"12\">\r\n          <div class=\"vinilos-scroll-container\">\r\n            <ion-card *ngFor=\"let vinilo of vinilosDestacados\" class=\"vinilo-card\" (click)=\"verDetalles(vinilo)\">\r\n              <img [src]=\"vinilo.imagen\" [alt]=\"vinilo.titulo\">\r\n              <ion-card-header>\r\n                <ion-card-title>{{ vinilo.titulo }}</ion-card-title>\r\n              </ion-card-header>\r\n            </ion-card>\r\n          </div>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-content>\r\n\r\n  <ion-modal [isOpen]=\"!!viniloSeleccionado\">\r\n    <ng-template>\r\n      <ion-header>\r\n        <ion-toolbar>\r\n          <ion-title>{{ viniloSeleccionado?.titulo }}</ion-title>\r\n          <ion-buttons slot=\"end\">\r\n            <ion-button (click)=\"cerrarDescripcion()\">Cerrar</ion-button>\r\n          </ion-buttons>\r\n        </ion-toolbar>\r\n      </ion-header>\r\n      <ion-content class=\"ion-padding\">\r\n        <img [src]=\"viniloSeleccionado?.imagen\" [alt]=\"viniloSeleccionado?.titulo\">\r\n        <h2>{{ viniloSeleccionado?.artista }}</h2>\r\n\r\n        <ion-segment [(ngModel)]=\"mostrarDescripcionDetalle\">\r\n          <ion-segment-button value=\"descripcion\">\r\n            DescripciÃ³n\r\n          </ion-segment-button>\r\n          <ion-segment-button value=\"tracklist\">\r\n            Tracklist\r\n          </ion-segment-button>\r\n        </ion-segment>\r\n\r\n        <div *ngIf=\"mostrarDescripcionDetalle === 'descripcion'\">\r\n          <div *ngFor=\"let parrafo of viniloSeleccionado?.descripcion\">\r\n            <p>{{ parrafo }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"mostrarDescripcionDetalle === 'tracklist'\">\r\n          <h3>Tracklist</h3>\r\n          <ol>\r\n            <li *ngFor=\"let cancion of viniloSeleccionado?.tracklist\">\r\n              {{ cancion }}\r\n            </li>\r\n          </ol>\r\n        </div>\r\n\r\n        <ion-text color=\"primary\">\r\n          <h3>Precio: {{ viniloSeleccionado?.precio | currency:'CLP':'symbol-narrow':'1.0-0' }}</h3>\r\n        </ion-text>\r\n        <ion-text color=\"medium\">\r\n          <p>Stock disponible: {{ viniloSeleccionado?.stock ?? 'N/A' }}</p>\r\n        </ion-text>\r\n        <ion-button expand=\"block\" (click)=\"agregarAlCarrito()\" [disabled]=\"viniloSeleccionado?.stock === 0\">\r\n          Agregar al carrito\r\n        </ion-button>\r\n      </ion-content>\r\n    </ng-template>\r\n  </ion-modal>\r\n</ion-content>\r\n\r\n<ion-footer>\r\n  <ion-toolbar>\r\n    <ion-title>Â© 2024 Vinyl</ion-title>\r\n  </ion-toolbar>\r\n</ion-footer>",
        "home.page.scss": "// Variables\r\n$primary-color: #8B4513; // Saddle Brown\r\n$secondary-color: #DEB887; // Burlywood\r\n$accent-color: #CD853F; // Peru\r\n$background-color: #FFF8DC; // Cornsilk\r\n$card-background: #FAEBD7; // Antique White\r\n$text-color: #3E2723; // Dark Brown\r\n$light-text-color: #FFF8DC; // Cornsilk\r\n\r\n@mixin vintage-border {\r\n  border: 2px solid $primary-color;\r\n  box-shadow: 3px 3px 0 rgba($primary-color, 0.5);\r\n}\r\n\r\nion-content {\r\n  --ion-background-color: #{$background-color};\r\n  font-family: 'Georgia', serif;\r\n}\r\n\r\nion-title {\r\n  font-weight: bold;\r\n  color: $light-text-color;\r\n  font-family: 'Playfair Display', serif;\r\n}\r\n\r\nion-header ion-toolbar {\r\n  --background: #{$primary-color};\r\n  \r\n  ion-title {\r\n    text-align: center;\r\n    font-size: 1.6em;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2px;\r\n  }\r\n}\r\n\r\nion-card {\r\n  margin: 16px;\r\n  border-radius: 0;\r\n  @include vintage-border;\r\n  background-color: $card-background;\r\n  overflow: hidden;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 250px;\r\n    object-fit: cover;\r\n    filter: sepia(20%);\r\n  }\r\n}\r\n\r\nion-header ion-toolbar:nth-child(2) {\r\n  --background: #{$secondary-color};\r\n  \r\n  ion-title {\r\n    color: $text-color;\r\n    font-size: 1.3em;\r\n    font-style: italic;\r\n  }\r\n}\r\n\r\n.vinilos-scroll-container {\r\n  display: flex;\r\n  overflow-x: auto;\r\n  padding: 16px;\r\n  scroll-snap-type: x mandatory;\r\n  \r\n  &::-webkit-scrollbar {\r\n    height: 8px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: $accent-color;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-track {\r\n    background-color: $secondary-color;\r\n    border-radius: 4px;\r\n  }\r\n}\r\n\r\n// Vinyl Card Styles\r\n.vinilo-card {\r\n  flex: 0 0 auto;\r\n  width: 200px;\r\n  margin-right: 20px;\r\n  scroll-snap-align: start;\r\n  transition: transform 0.3s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n  &:hover {\r\n    transform: translateY(-5px);\r\n  }\r\n  \r\n  img {\r\n    width: 100%;\r\n    height: 200px; \r\n    object-fit: cover;\r\n  }\r\n  \r\n  ion-card-header {\r\n    flex-grow: 1; \r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center; \r\n  }\r\n  \r\n  ion-card-title {\r\n    font-size: 1em;\r\n    font-weight: bold;\r\n    color: $text-color;\r\n    text-align: center;\r\n    padding: 12px;\r\n    font-family: 'Playfair Display', serif;\r\n    margin: 0;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n}\r\n\r\nion-modal {\r\n  --background: #{$background-color};\r\n  \r\n  ion-header ion-toolbar {\r\n    --background: #{$primary-color};\r\n    \r\n    ion-title {\r\n      padding-top: 10px;\r\n    }\r\n    \r\n    ion-buttons {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n  \r\n  ion-content {\r\n    --padding-top: 24px;\r\n    --padding-bottom: 24px;\r\n  }\r\n  \r\n  img {\r\n    @include vintage-border;\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n  \r\n  h2 {\r\n    color: $primary-color;\r\n    margin-top: 20px;\r\n    font-family: 'Playfair Display', serif;\r\n    font-size: 1.5em;\r\n  }\r\n  \r\n  ion-segment {\r\n    margin-top: 24px;\r\n    margin-bottom: 16px;\r\n    --background: #{$card-background};\r\n    \r\n    ion-segment-button {\r\n      --color: #{$text-color};\r\n      --color-checked: #{$light-text-color};\r\n      --background-checked: #{$accent-color};\r\n      --indicator-color: #{$primary-color};\r\n      font-family: 'Georgia', serif;\r\n      \r\n      &::part(indicator) {\r\n        height: 3px;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .segment-content {\r\n    margin-top: 16px;\r\n    \r\n    h3 {\r\n      color: $primary-color;\r\n      margin-bottom: 12px;\r\n    }\r\n    \r\n    p, li {\r\n      color: $text-color;\r\n      line-height: 1.6;\r\n    }\r\n  }\r\n  \r\n  ol {\r\n    padding-left: 24px;\r\n    color: $text-color;\r\n  }\r\n  \r\n  ion-button {\r\n    margin-top: 24px;\r\n    --background: #{$accent-color};\r\n    --color: #{$light-text-color};\r\n    --border-radius: 0;\r\n    @include vintage-border;\r\n    font-family: 'Georgia', serif;\r\n  }\r\n}\r\n\r\nion-footer {\r\n  background-color: $primary-color;\r\n  \r\n  ion-toolbar {\r\n    --background: #{$primary-color};\r\n    \r\n    ion-title {\r\n      font-size: 0.9em;\r\n      color: $light-text-color;\r\n      opacity: 0.9;\r\n      font-style: italic;\r\n    }\r\n  }\r\n}",
        "home.page.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { HomePage } from './home.page';\r\n\r\ndescribe('HomePage', () => {\r\n  let component: HomePage;\r\n  let fixture: ComponentFixture<HomePage>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      declarations: [HomePage],\r\n      imports: [IonicModule.forRoot()]\r\n    }).compileComponents();\r\n\r\n    fixture = TestBed.createComponent(HomePage);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n",
        "home.page.ts": "import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CartService, CartVinyl } from '../services/cart.service';\r\nimport { Vinyl } from '../models/vinilos.model';  \r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'home.page.html',\r\n  styleUrls: ['home.page.scss'],\r\n})\r\nexport class HomePage implements OnInit, OnDestroy {\r\n  vinilosDestacados: Vinyl[] = [\r\n    {\r\n      id: 5,\r\n      titulo: 'Sempiternal',\r\n      artista: 'Bring me the horizon',\r\n      imagen: 'assets/img/sempiternal.jpg',\r\n      descripcion: [\r\n        'Sempiternal es el cuarto Ã¡lbum de estudio de la banda de rock britÃ¡nica Bring Me the Horizon. Fue lanzado el 1 de abril de 2013 en todo el mundo a travÃ©s de RCA Records, un sello subsidiario de Sony Music, y el 2 de abril de 2013 en los Estados Unidos y CanadÃ¡ a travÃ©s de Epitaph Records.'\r\n      ],\r\n      tracklist: [\r\n        'Can You Feel My Heart',\r\n        'The House of Wolves',\r\n        'Empire (Let Them Sing)',\r\n        'Sleepwalking',\r\n        'Go to Hell, for Heavens Sake',\r\n        'Shadow Moses',\r\n        'And the Snakes Start to Sing',\r\n        'Seen It All Before',\r\n        'Antivist',\r\n        'Crooked Young',\r\n        'Hospital for Souls'\r\n      ],\r\n      stock: 10,\r\n      precio: 35990,\r\n      IsAvailable: true\r\n    },\r\n    {\r\n      id: 6,\r\n      titulo: 'That the spirit',\r\n      artista: 'Bring me the horizon',\r\n      imagen: 'assets/img/spirit.jpg',\r\n      descripcion: [\r\n        'Thats the Spirit âen espaÃ±ol: Ese es el espÃ­rituâ es el nombre del quinto Ã¡lbum de estudio de la banda britÃ¡nica Bring Me the Horizon. Fue lanzado el 11 de septiembre de 2015,  y marca un sonido bastante alejado al de sus orÃ­genes como una banda de metalcore.'\r\n      ],\r\n      tracklist: [\r\n        'Doomed',\r\n        'Happy Song',\r\n        'Throne',\r\n        'True Friends',\r\n        'Follow You',\r\n        'What You Need',\r\n        'Avalanche',\r\n        'Run',\r\n        'Drown',\r\n        'Blasphemy',\r\n        'Oh No'\r\n      ],\r\n      stock: 10,\r\n      precio: 41990,\r\n      IsAvailable: true\r\n    },\r\n    {\r\n      id: 7,\r\n      titulo: 'Anti-icon',\r\n      artista: 'Ghostemane',\r\n      imagen: 'assets/img/anti.jpg',\r\n      descripcion: [],\r\n      tracklist: [\r\n        'Intro.Destitute',\r\n        'Vagabond',\r\n        'Lazaretto',\r\n        'Sacrilege',\r\n        'AI',\r\n        'Fed Up',\r\n        'The Winds of Change',\r\n        'Hydrochloride',\r\n        'Hellrap',\r\n        'Anti-Social Masochistic Rage [ASMR]',\r\n        'Melanchoholic',\r\n        'Calamity',\r\n        'Falling Down'\r\n      ],\r\n      stock: 10,\r\n      precio: 33900,\r\n      IsAvailable: true\r\n    },\r\n  ];\r\n\r\n  viniloSeleccionado: Vinyl | null = null;\r\n  mostrarDescripcionDetalle: 'descripcion' | 'tracklist' = 'descripcion';\r\n\r\n  banners: string[] = [\r\n    'assets/img/banner.jpg',\r\n    'assets/img/banner2.jpg',\r\n    'assets/img/banner3.png'\r\n  ];\r\n\r\n  currentBannerIndex = 0; \r\n  bannerInterval: any;\r\n\r\n  constructor(\r\n    private cartService: CartService,\r\n    private toastController: ToastController\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.startBannerRotation();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.bannerInterval) {\r\n      clearInterval(this.bannerInterval);\r\n    }\r\n  }\r\n\r\n  startBannerRotation() {\r\n    this.bannerInterval = setInterval(() => {\r\n      this.currentBannerIndex = (this.currentBannerIndex + 1) % this.banners.length;\r\n    }, 4000);\r\n  }\r\n\r\n  verDetalles(vinilo: Vinyl) {\r\n    this.viniloSeleccionado = vinilo;\r\n  }\r\n\r\n  cerrarDescripcion() {\r\n    this.viniloSeleccionado = null;\r\n  }\r\n\r\n  async agregarAlCarrito() {\r\n    if (this.viniloSeleccionado) {\r\n      this.cartService.addToCart(this.viniloSeleccionado);\r\n      await this.presentToast(`${this.viniloSeleccionado.titulo} agregado al carrito`);\r\n      this.cerrarDescripcion();\r\n    }\r\n  }\r\n\r\n  async presentToast(message: string, color: string = 'success') {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n      position: 'bottom',\r\n      color: color\r\n    });\r\n    toast.present();\r\n  }\r\n}"
      },
      "login": {
        "login-routing.module.ts": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n",
        "login.module.ts": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n",
        "login.page.html": "\r\n<ion-content>\r\n  <div class=\"background-image\"></div>\r\n  <div class=\"login-container\">\r\n    <h2>Inicio de SesiÃ³n</h2>\r\n    <form id=\"login-form\" (ngSubmit)=\"login()\">\r\n      <div class=\"input-box\">\r\n        <ion-input [(ngModel)]=\"email\" type=\"email\" name=\"email\" required></ion-input>\r\n        <span class=\"input-line\"></span>\r\n        <label for=\"email\">Correo ElectrÃ³nico</label>\r\n      </div>\r\n      <div class=\"input-box\">\r\n        <ion-input [(ngModel)]=\"password\" type=\"password\" name=\"password\" required></ion-input>\r\n        <span class=\"input-line\"></span>\r\n        <label for=\"password\">ContraseÃ±a</label>\r\n      </div>\r\n      <a [routerLink]=\"['/register']\">Registrate</a>\r\n      <ion-button expand=\"full\" type=\"submit\">Iniciar SesiÃ³n</ion-button>\r\n    </form>\r\n  </div>\r\n</ion-content>\r\n",
        "login.page.scss": "// Variables (manteniendo las existentes)\r\n$primary-color: #8B4513; // Saddle Brown\r\n$secondary-color: #DEB887; // Burlywood\r\n$accent-color: #CD853F; // Peru\r\n$background-color: #FFF8DC; // Cornsilk\r\n$card-background: #FAEBD7; // Antique White\r\n$text-color: #3E2723; // Dark Brown\r\n$light-text-color: #FFF8DC; // Cornsilk\r\n\r\n@mixin vintage-border {\r\n  border: 2px solid $primary-color;\r\n  box-shadow: 3px 3px 0 rgba($primary-color, 0.5);\r\n}\r\n\r\nion-content {\r\n  --background: none;\r\n  background-image: url('/assets/img/asd.jpg');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  font-family: 'Georgia', serif;\r\n\r\n  // Eliminado el overlay difuminado\r\n  &::before {\r\n    content: none;\r\n  }\r\n}\r\n\r\n.login-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 90%;\r\n  max-width: 400px;\r\n  height: auto;\r\n  min-height: 400px;\r\n  padding: 30px;\r\n  background-color: rgba($card-background, 0.9);\r\n  @include vintage-border;\r\n  z-index: 1;\r\n  overflow-y: auto;\r\n}\r\n\r\nh2 {\r\n  color: $primary-color;\r\n  font-family: 'Playfair Display', serif;\r\n  font-size: 2.2em;\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  letter-spacing: 2px;\r\n}\r\n\r\n#login-form {\r\n  width: 100%;\r\n  max-width: 300px;\r\n}\r\n\r\n.input-box {\r\n  position: relative;\r\n  margin-bottom: 25px;\r\n}\r\n\r\nion-input {\r\n  width: 100%;\r\n  padding: 15px 10px 10px;\r\n  font-size: 16px;\r\n  color: $text-color;\r\n  border: 1px solid $primary-color;\r\n  background-color: $light-text-color;\r\n  outline: none;\r\n  transition: border-color 0.3s;\r\n\r\n  &:focus {\r\n    border-color: $accent-color;\r\n  }\r\n}\r\n\r\nlabel {\r\n  position: absolute;\r\n  top: -20px;\r\n  left: 10px;\r\n  padding: 0 5px;\r\n  font-size: 14px;\r\n  color: $primary-color;\r\n  background-color: $card-background;\r\n  z-index: 1;\r\n}\r\n\r\na {\r\n  display: block;\r\n  text-align: right;\r\n  color: $accent-color;\r\n  text-decoration: none;\r\n  margin-bottom: 20px;\r\n  font-style: italic;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\nion-button {\r\n  --background: #{$primary-color};\r\n  --color: #{$light-text-color};\r\n  --border-radius: 0;\r\n  @include vintage-border;\r\n  font-family: 'Georgia', serif;\r\n  margin-top: 20px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    --background: #{$accent-color};\r\n    transform: translateY(-2px);\r\n  }\r\n}\r\n\r\nion-content {\r\n  --overflow: hidden;\r\n}\r\n",
        "login.page.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { LoginPage } from './login.page';\r\n\r\ndescribe('LoginPage', () => {\r\n  let component: LoginPage;\r\n  let fixture: ComponentFixture<LoginPage>;\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(LoginPage);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n",
        "login.page.ts": "import { Component } from '@angular/core';\r\nimport { NavController, ToastController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage {\r\n  email: string = '';\r\n  password: string = '';\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private toastController: ToastController\r\n  ) {}\r\n\r\n  async login() {\r\n    this.navCtrl.navigateRoot('/home');\r\n  }\r\n\r\n  goToRegister() {\r\n    this.navCtrl.navigateForward('/register');\r\n  }\r\n\r\n  async presentToast(message: string, color: string) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n      position: 'bottom',\r\n      color: color\r\n    });\r\n    toast.present();\r\n  }\r\n}"
      },
      "models": {
        "order.model.ts": "export interface Order {\r\n    id?: number;\r\n    userId: number;\r\n    createdAt?: string;\r\n    status: string;\r\n    totalAmount: number;\r\n    orderDetails: {\r\n      productId: number;\r\n      quantity: number;\r\n      price: number;\r\n    }[];\r\n  }",
        "user.model.ts": "export interface User {\r\n    id?: number;              \r\n    username: string;         \r\n    password: string;         \r\n    role: 'user' | 'admin' ;  \r\n    name: string;             \r\n    email: string;            \r\n    phoneNumber?: string;     \r\n    createdAt?: string;       \r\n    lastLogin?: string;       \r\n  }\r\n  ",
        "vinilos.model.ts": "export interface Vinyl {\r\n  id?: number;  \r\n  titulo: string;\r\n  artista: string;\r\n  imagen: string;\r\n  descripcion: string[];\r\n  tracklist: string[];\r\n  stock: number;\r\n  precio: number;\r\n  quantity?: number;\r\n  IsAvailable: boolean;  \r\n}"
      },
      "profile-edit": {
        "profile-edit-routing.module.ts": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProfileEditPage } from './profile-edit.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfileEditPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProfileEditPageRoutingModule {}\r\n",
        "profile-edit.module.ts": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProfileEditPageRoutingModule } from './profile-edit-routing.module';\r\n\r\nimport { ProfileEditPage } from './profile-edit.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ProfileEditPageRoutingModule\r\n  ],\r\n  declarations: [ProfileEditPage]\r\n})\r\nexport class ProfileEditPageModule {}\r\n",
        "profile-edit.page.html": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"/home\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Mi Perfil</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content class=\"ion-padding\">\r\n  <!-- Perfil del usuario -->\r\n  <ng-container *ngIf=\"currentUser\">\r\n    <!-- SecciÃ³n de foto de perfil -->\r\n    <div class=\"profile-photo-container\">\r\n      <ion-img \r\n        [src]=\"currentUser.photo || 'assets/default-avatar.png'\" \r\n        alt=\"Foto de perfil\">\r\n      </ion-img>\r\n      <ion-button expand=\"block\" (click)=\"fileInput.click()\">\r\n        <ion-icon name=\"camera\" slot=\"start\"></ion-icon>\r\n        Seleccionar Foto\r\n      </ion-button>\r\n      <input #fileInput type=\"file\" (change)=\"onPhotoSelected($event)\" style=\"display: none;\" accept=\"image/*\">\r\n    </div>\r\n\r\n    <!-- Card de informaciÃ³n del perfil -->\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title>\r\n          <ion-icon name=\"person-circle-outline\"></ion-icon>\r\n          Mi Perfil\r\n        </ion-card-title>\r\n      </ion-card-header>\r\n\r\n      <ion-card-content>\r\n        <!-- InformaciÃ³n bÃ¡sica -->\r\n        <ion-item>\r\n          <ion-label position=\"stacked\">\r\n            <ion-icon name=\"mail-outline\"></ion-icon>\r\n            Correo\r\n          </ion-label>\r\n          <ion-input [value]=\"currentUser.email\" readonly></ion-input>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-label position=\"stacked\">\r\n            <ion-icon name=\"person-outline\"></ion-icon>\r\n            Nombre\r\n          </ion-label>\r\n          <ion-input \r\n            [(ngModel)]=\"currentUser.name\" \r\n            placeholder=\"Ingrese su nombre\"\r\n            type=\"text\">\r\n          </ion-input>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-label position=\"stacked\">\r\n            <ion-icon name=\"people-outline\"></ion-icon>\r\n            Apellido\r\n          </ion-label>\r\n          <ion-input \r\n            [(ngModel)]=\"currentUser.lastName\" \r\n            placeholder=\"Ingrese su apellido\"\r\n            type=\"text\">\r\n          </ion-input>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-label position=\"stacked\">\r\n            <ion-icon name=\"location-outline\"></ion-icon>\r\n            DirecciÃ³n\r\n          </ion-label>\r\n          <ion-input \r\n            [(ngModel)]=\"currentUser.address\" \r\n            placeholder=\"Ingrese su direcciÃ³n\"\r\n            type=\"text\">\r\n          </ion-input>\r\n        </ion-item>\r\n\r\n        <!-- Botones de acciÃ³n -->\r\n        <div class=\"action-buttons\">\r\n          <ion-button expand=\"block\" (click)=\"saveUser()\">\r\n            <ion-icon name=\"save-outline\" slot=\"start\"></ion-icon>\r\n            Guardar Cambios\r\n          </ion-button>\r\n        </div>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  </ng-container>\r\n\r\n  <!-- Mensaje de error si no hay usuario -->\r\n  <ion-card *ngIf=\"!currentUser\" class=\"error-card\">\r\n    <ion-card-header>\r\n      <ion-card-title>\r\n        <ion-icon name=\"alert-circle-outline\" color=\"danger\"></ion-icon>\r\n        Error\r\n      </ion-card-title>\r\n    </ion-card-header>\r\n    <ion-card-content>\r\n      <p>No se pudo cargar la informaciÃ³n del usuario. Por favor, intente nuevamente mÃ¡s tarde.</p>\r\n      <ion-button expand=\"block\" routerLink=\"/home\" color=\"primary\">\r\n        <ion-icon name=\"home-outline\" slot=\"start\"></ion-icon>\r\n        Volver al Inicio\r\n      </ion-button>\r\n    </ion-card-content>\r\n  </ion-card>\r\n\r\n  <!-- Loader mientras se carga la informaciÃ³n -->\r\n  <div class=\"loading-container\" *ngIf=\"loading\">\r\n    <ion-spinner name=\"crescent\"></ion-spinner>\r\n    <p>Cargando informaciÃ³n...</p>\r\n  </div>\r\n</ion-content>",
        "profile-edit.page.scss": "// Variables\r\n$primary-color: #8B4513;    // Saddle Brown\r\n$secondary-color: #DEB887;  // Burlywood\r\n$accent-color: #CD853F;     // Peru\r\n$background-color: #FFF8DC; // Cornsilk\r\n$card-background: #FAEBD7;  // Antique White\r\n$text-color: #3E2723;      // Dark Brown\r\n$light-text-color: #FFF8DC; // Cornsilk\r\n$error-color: #B22222;     // FireBrick\r\n$success-color: #2E8B57;   // Sea Green\r\n$spacing-unit: 16px;\r\n$border-radius: 8px;\r\n$transition-duration: 0.3s;\r\n\r\n// Mixins\r\n@mixin vintage-border {\r\n  border: 2px solid $primary-color;\r\n  box-shadow: 3px 3px 0 rgba($primary-color, 0.5);\r\n  border-radius: $border-radius;\r\n}\r\n\r\n@mixin flex-center {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n@mixin card-style {\r\n  background: $card-background;\r\n  @include vintage-border;\r\n  padding: $spacing-unit;\r\n  margin-bottom: $spacing-unit;\r\n}\r\n\r\n// Animations\r\n@keyframes fadeIn {\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n}\r\n\r\n@keyframes slideIn {\r\n  from { transform: translateY(20px); opacity: 0; }\r\n  to { transform: translateY(0); opacity: 1; }\r\n}\r\n\r\n// General Styles\r\nion-content {\r\n  --background: #{$background-color};\r\n  font-family: 'Georgia', serif;\r\n\r\n  &::part(scroll) {\r\n    padding: $spacing-unit;\r\n    padding-bottom: $spacing-unit * 2;\r\n  }\r\n}\r\n\r\n// Header Styles\r\nion-header {\r\n  ion-toolbar {\r\n    --background: #{$primary-color};\r\n    \r\n    ion-title {\r\n      text-align: center;\r\n      font-size: 1.5rem;\r\n      font-family: 'Playfair Display', serif;\r\n      color: $light-text-color;\r\n      padding: $spacing-unit 0;\r\n    }\r\n\r\n    ion-back-button {\r\n      --color: #{$light-text-color};\r\n    }\r\n  }\r\n}\r\n\r\n// Profile Photo Styles\r\n.profile-photo-container {\r\n  @include card-style;\r\n  text-align: center;\r\n  padding: $spacing-unit * 2;\r\n  margin-top: $spacing-unit;\r\n  animation: fadeIn $transition-duration ease-in-out;\r\n\r\n  ion-img {\r\n    width: 200px;\r\n    height: 200px;\r\n    margin: 0 auto $spacing-unit;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n    border: 3px solid $primary-color;\r\n    background-color: $card-background;\r\n    transition: transform $transition-duration ease;\r\n\r\n    &:hover {\r\n      transform: scale(1.05);\r\n    }\r\n  }\r\n\r\n  ion-button {\r\n    max-width: 250px;\r\n    margin: $spacing-unit auto 0;\r\n  }\r\n}\r\n\r\n// User List Styles\r\nion-list {\r\n  background: transparent;\r\n  margin: ($spacing-unit * 2) 0;\r\n  animation: slideIn $transition-duration ease-out;\r\n\r\n  ion-item {\r\n    --background: #{$card-background};\r\n    --border-color: #{$primary-color};\r\n    margin-bottom: $spacing-unit;\r\n    @include vintage-border;\r\n    transition: transform $transition-duration ease;\r\n\r\n    &:hover {\r\n      transform: translateX(5px);\r\n    }\r\n\r\n    ion-label {\r\n      h2 {\r\n        color: $primary-color;\r\n        font-size: 1.1rem;\r\n        font-weight: bold;\r\n        margin-bottom: 8px;\r\n      }\r\n\r\n      p {\r\n        color: $text-color;\r\n        margin: 4px 0;\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        ion-icon {\r\n          margin-right: 8px;\r\n          color: $accent-color;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Card Styles\r\nion-card {\r\n  @include vintage-border;\r\n  background: $card-background;\r\n  margin: $spacing-unit 0;\r\n  animation: slideIn $transition-duration ease-out;\r\n\r\n  ion-card-header {\r\n    background: $primary-color;\r\n    padding: $spacing-unit;\r\n\r\n    ion-card-title {\r\n      color: $light-text-color;\r\n      font-family: 'Playfair Display', serif;\r\n      font-size: 1.3rem;\r\n      text-align: center;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      ion-icon {\r\n        margin-right: $spacing-unit;\r\n      }\r\n    }\r\n  }\r\n\r\n  ion-card-content {\r\n    padding: $spacing-unit;\r\n\r\n    ion-item {\r\n      --background: transparent;\r\n      --border-color: #{$accent-color};\r\n      margin-bottom: $spacing-unit;\r\n      \r\n      ion-label {\r\n        color: $primary-color;\r\n        font-weight: bold;\r\n        margin-bottom: 8px;\r\n      }\r\n\r\n      ion-input {\r\n        --color: #{$text-color};\r\n        --placeholder-color: #{$secondary-color};\r\n        font-family: 'Georgia', serif;\r\n        --padding-start: $spacing-unit;\r\n        margin-top: 8px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Button Styles\r\nion-button {\r\n  --background: #{$accent-color};\r\n  --color: #{$light-text-color};\r\n  --border-radius: #{$border-radius};\r\n  height: 48px;\r\n  font-family: 'Georgia', serif;\r\n  margin: ($spacing-unit / 2) 0;\r\n  transition: transform $transition-duration ease;\r\n  \r\n  &:hover {\r\n    transform: translateY(-2px);\r\n  }\r\n\r\n  &.button-block {\r\n    margin: $spacing-unit 0;\r\n  }\r\n\r\n  &[color=\"secondary\"] {\r\n    --background: #{$secondary-color};\r\n  }\r\n\r\n  &[disabled] {\r\n    opacity: 0.7;\r\n  }\r\n}\r\n\r\n// Loading Styles\r\n.loading-container {\r\n  @include flex-center;\r\n  flex-direction: column;\r\n  height: 200px;\r\n  animation: fadeIn $transition-duration ease-in;\r\n  \r\n  ion-spinner {\r\n    width: 48px;\r\n    height: 48px;\r\n    color: $primary-color;\r\n  }\r\n\r\n  p {\r\n    margin-top: $spacing-unit;\r\n    color: $primary-color;\r\n    font-family: 'Georgia', serif;\r\n  }\r\n}\r\n\r\n// Custom Classes\r\n.action-buttons {\r\n  padding: $spacing-unit;\r\n  \r\n  ion-button {\r\n    margin-bottom: $spacing-unit;\r\n    \r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.error-card {\r\n  @include card-style;\r\n  text-align: center;\r\n  \r\n  ion-card-title {\r\n    color: $error-color;\r\n    font-size: 1.2rem;\r\n    margin-bottom: $spacing-unit;\r\n  }\r\n\r\n  p {\r\n    color: $text-color;\r\n  }\r\n}\r\n\r\n// Toast Customization\r\n.custom-toast {\r\n  --background: #{$card-background};\r\n  --color: #{$text-color};\r\n  --border-color: #{$primary-color};\r\n  --border-radius: #{$border-radius};\r\n  --border-width: 2px;\r\n  --border-style: solid;\r\n}\r\n\r\n// Loading Customization\r\n.custom-loading {\r\n  --background: #{$card-background};\r\n  --spinner-color: #{$primary-color};\r\n}\r\n\r\n// Responsive Design\r\n@media (min-width: 768px) {\r\n  ion-content::part(scroll) {\r\n    max-width: 768px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .profile-photo-container {\r\n    ion-img {\r\n      width: 250px;\r\n      height: 250px;\r\n    }\r\n  }\r\n\r\n  ion-card {\r\n    max-width: 600px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n  ion-content::part(scroll) {\r\n    padding: $spacing-unit/2;\r\n  }\r\n\r\n  .profile-photo-container {\r\n    ion-img {\r\n      width: 150px;\r\n      height: 150px;\r\n    }\r\n  }\r\n}",
        "profile-edit.page.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { ProfileEditPage } from './profile-edit.page';\r\n\r\ndescribe('ProfileEditPage', () => {\r\n  let component: ProfileEditPage;\r\n  let fixture: ComponentFixture<ProfileEditPage>;\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(ProfileEditPage);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n",
        "profile-edit.page.ts": "import { Component, OnInit } from '@angular/core';\r\nimport { NavController, ToastController, LoadingController } from '@ionic/angular';\r\n\r\ninterface User {\r\n  email: string;\r\n  name: string;\r\n  lastName: string;\r\n  address: string;\r\n  photo: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-profile-edit',\r\n  templateUrl: './profile-edit.page.html',\r\n  styleUrls: ['./profile-edit.page.scss'],\r\n})\r\nexport class ProfileEditPage implements OnInit {\r\n  users: User[] = [\r\n    { email: 'user@example.com', name: 'Normal', lastName: 'User', address: 'User St', photo: '' }\r\n  ];\r\n  \r\n  currentUser: User | null = null;\r\n  newPassword: string = '';\r\n  loading: boolean = false;\r\n  photoLoading: boolean = false;\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private toastController: ToastController,\r\n    private loadingController: LoadingController\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadCurrentUser();\r\n  }\r\n\r\n  async loadCurrentUser() {\r\n    this.loading = true;\r\n    \r\n    // Simulamos una carga asÃ­ncrona con un usuario por defecto\r\n    setTimeout(() => {\r\n      this.currentUser = this.users[0];\r\n      this.loading = false;\r\n    }, 1000);\r\n  }\r\n\r\n  async saveUser() {\r\n    if (!this.currentUser) {\r\n      await this.presentToast('Error: No hay usuario para guardar');\r\n      return;\r\n    }\r\n\r\n    const loading = await this.presentLoading('Guardando cambios...');\r\n\r\n    try {\r\n      const index = this.users.findIndex(u => u.email === this.currentUser?.email);\r\n      if (index > -1) {\r\n        this.users[index] = { ...this.currentUser };\r\n        await this.presentToast('Perfil actualizado con Ã©xito.');\r\n      } else {\r\n        this.users.push({ ...this.currentUser });\r\n        await this.presentToast('Perfil creado con Ã©xito.');\r\n      }\r\n    } catch (error) {\r\n      await this.presentToast('Error al guardar los cambios.');\r\n    } finally {\r\n      loading.dismiss();\r\n    }\r\n  }\r\n\r\n  async updatePassword() {\r\n    if (!this.newPassword.trim()) {\r\n      await this.presentToast('Por favor, ingrese una nueva contraseÃ±a.');\r\n      return;\r\n    }\r\n\r\n    const loading = await this.presentLoading('Actualizando contraseÃ±a...');\r\n\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 1000)); // SimulaciÃ³n\r\n      await this.presentToast('ContraseÃ±a actualizada con Ã©xito.');\r\n      this.newPassword = '';\r\n    } catch (error) {\r\n      await this.presentToast('Error al actualizar la contraseÃ±a.');\r\n    } finally {\r\n      loading.dismiss();\r\n    }\r\n  }\r\n\r\n  async onPhotoSelected(event: any) {\r\n    const file = event.target.files[0];\r\n    if (!file || !this.currentUser) return;\r\n\r\n    this.photoLoading = true;\r\n    const loading = await this.presentLoading('Cargando imagen...');\r\n\r\n    try {\r\n      const reader = new FileReader();\r\n      reader.onload = (e: any) => {\r\n        if (this.currentUser) {\r\n          this.currentUser.photo = e.target.result;\r\n          this.photoLoading = false;\r\n          loading.dismiss();\r\n          this.presentToast('Foto actualizada con Ã©xito.');\r\n        }\r\n      };\r\n      reader.onerror = () => {\r\n        this.photoLoading = false;\r\n        loading.dismiss();\r\n        this.presentToast('Error al cargar la imagen.');\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } catch (error) {\r\n      this.photoLoading = false;\r\n      loading.dismiss();\r\n      await this.presentToast('Error al procesar la imagen.');\r\n    }\r\n  }\r\n\r\n  async presentToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n      position: 'bottom',\r\n      cssClass: 'custom-toast'\r\n    });\r\n    await toast.present();\r\n  }\r\n\r\n  async presentLoading(message: string) {\r\n    const loading = await this.loadingController.create({\r\n      message: message,\r\n      spinner: 'crescent',\r\n      cssClass: 'custom-loading'\r\n    });\r\n    await loading.present();\r\n    return loading;\r\n  }\r\n}"
      },
      "register": {
        "register-routing.module.ts": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n",
        "register.module.ts": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n",
        "register.page.html": "<ion-content>\r\n  <div class=\"background-image\"></div>\r\n  <div class=\"login-container\">\r\n    <h2>Registro</h2>\r\n    <form id=\"login-form\" (ngSubmit)=\"register()\">\r\n      <div class=\"input-box\">\r\n        <ion-input [(ngModel)]=\"firstName\" type=\"text\" name=\"firstName\" required></ion-input>\r\n        <span class=\"input-line\"></span>\r\n        <label for=\"firstName\">Nombre</label>\r\n      </div>\r\n\r\n      <div class=\"input-box\">\r\n        <ion-input [(ngModel)]=\"lastName\" type=\"text\" name=\"lastName\" required></ion-input>\r\n        <span class=\"input-line\"></span>\r\n        <label for=\"lastName\">Apellido</label>\r\n      </div>\r\n\r\n      <div class=\"input-box\">\r\n        <ion-input [(ngModel)]=\"email\" type=\"email\" name=\"email\" required></ion-input>\r\n        <span class=\"input-line\"></span>\r\n        <label for=\"email\">Correo ElectrÃ³nico</label>\r\n      </div>\r\n\r\n      <div class=\"input-box\">\r\n        <ion-input [(ngModel)]=\"password\" type=\"password\" name=\"password\" required></ion-input>\r\n        <span class=\"input-line\"></span>\r\n        <label for=\"password\">ContraseÃ±a</label>\r\n      </div>\r\n\r\n      <div class=\"input-box\">\r\n        <ion-input [(ngModel)]=\"confirmPassword\" type=\"password\" name=\"confirmPassword\" required></ion-input>\r\n        <span class=\"input-line\"></span>\r\n        <label for=\"confirmPassword\">Confirmar ContraseÃ±a</label>\r\n      </div>\r\n\r\n      <a [routerLink]=\"['/login']\">Â¿Ya tienes cuenta? Inicia sesiÃ³n</a>\r\n      <ion-button expand=\"full\" type=\"submit\">Registrarse</ion-button>\r\n    </form>\r\n  </div>\r\n</ion-content>",
        "register.page.scss": "// Variables\r\n$primary-color: #8B4513; // Saddle Brown\r\n$secondary-color: #DEB887; // Burlywood\r\n$accent-color: #CD853F; // Peru\r\n$background-color: #FFF8DC; // Cornsilk\r\n$card-background: #FAEBD7; // Antique White\r\n$text-color: #3E2723; // Dark Brown\r\n$light-text-color: #FFF8DC; // Cornsilk\r\n\r\n@mixin vintage-border {\r\n  border: 2px solid $primary-color;\r\n  box-shadow: 3px 3px 0 rgba($primary-color, 0.5);\r\n}\r\n\r\nion-content {\r\n  --background: none;\r\n  background-image: url('/assets/img/asd.jpg');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  font-family: 'Georgia', serif;\r\n\r\n  &::before {\r\n    content: none;\r\n  }\r\n}\r\n\r\n.login-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 90%;\r\n  max-width: 400px;\r\n  height: auto;\r\n  min-height: 400px;\r\n  padding: 30px;\r\n  background-color: rgba($card-background, 0.9);\r\n  @include vintage-border;\r\n  z-index: 1;\r\n  overflow-y: auto;\r\n}\r\n\r\nh2 {\r\n  color: $primary-color;\r\n  font-family: 'Playfair Display', serif;\r\n  font-size: 2.2em;\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  letter-spacing: 2px;\r\n}\r\n\r\n#login-form {\r\n  width: 100%;\r\n  max-width: 300px;\r\n}\r\n\r\n.input-box {\r\n  position: relative;\r\n  margin-bottom: 25px;\r\n}\r\n\r\nion-input {\r\n  width: 100%;\r\n  padding: 15px 10px 10px;\r\n  font-size: 16px;\r\n  color: $text-color;\r\n  border: 1px solid $primary-color;\r\n  background-color: $light-text-color;\r\n  outline: none;\r\n  transition: border-color 0.3s;\r\n\r\n  &:focus {\r\n    border-color: $accent-color;\r\n  }\r\n}\r\n\r\nlabel {\r\n  position: absolute;\r\n  top: -20px;\r\n  left: 10px;\r\n  padding: 0 5px;\r\n  font-size: 14px;\r\n  color: $primary-color;\r\n  background-color: $card-background;\r\n  z-index: 1;\r\n}\r\n\r\na {\r\n  display: block;\r\n  text-align: right;\r\n  color: $accent-color;\r\n  text-decoration: none;\r\n  margin-bottom: 20px;\r\n  font-style: italic;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\nion-button {\r\n  --background: #{$primary-color};\r\n  --color: #{$light-text-color};\r\n  --border-radius: 0;\r\n  @include vintage-border;\r\n  font-family: 'Georgia', serif;\r\n  margin-top: 20px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    --background: #{$accent-color};\r\n    transform: translateY(-2px);\r\n  }\r\n}\r\n\r\n// Media queries para responsividad\r\n@media (max-width: 768px) {\r\n  .login-container {\r\n    width: 95%;\r\n    padding: 20px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1.8em;\r\n  }\r\n}\r\n\r\n@media (max-height: 800px) {\r\n  .login-container {\r\n    top: 0;\r\n    transform: translate(-50%, 0);\r\n    margin: 20px 0;\r\n    position: absolute;\r\n  }\r\n}\r\n\r\n// Ajustes para cuando el teclado estÃ¡ abierto en dispositivos mÃ³viles\r\n.keyboard-open .login-container {\r\n  position: absolute;\r\n  top: 0;\r\n  transform: translate(-50%, 0);\r\n  margin: 20px 0;\r\n}\r\n\r\nion-content {\r\n  --overflow: hidden;\r\n}\r\n\r\n// Asegurarse de que el contenido sea scrolleable en dispositivos pequeÃ±os\r\n@media (max-height: 600px) {\r\n  .login-container {\r\n    height: 100%;\r\n    overflow-y: auto;\r\n  }\r\n}",
        "register.page.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { RegisterPage } from './register.page';\r\n\r\ndescribe('RegisterPage', () => {\r\n  let component: RegisterPage;\r\n  let fixture: ComponentFixture<RegisterPage>;\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(RegisterPage);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n",
        "register.page.ts": "import { Component } from '@angular/core';\r\nimport { NavController, ToastController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage {\r\n  email: string = '';\r\n  password: string = '';\r\n  confirmPassword: string = '';\r\n  firstName: string = '';\r\n  lastName: string = '';\r\n\r\n  users: { email: string, password: string, firstName: string, lastName: string }[] = [];\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private toastController: ToastController\r\n  ) {}\r\n\r\n  async register() {\r\n    if (!this.email || !this.password || !this.confirmPassword || !this.firstName || !this.lastName) {\r\n      await this.presentToast('Por favor, rellene todos los campos', 'warning');\r\n      return;\r\n    }\r\n\r\n    if (!this.validateEmail(this.email)) {\r\n      await this.presentToast('Por favor, ingrese un correo electrÃ³nico vÃ¡lido', 'warning');\r\n      return;\r\n    }\r\n\r\n    if (!this.validatePassword(this.password)) {\r\n      await this.presentToast('La contraseÃ±a debe tener entre 8 y 30 caracteres, incluir al menos una mayÃºscula y un nÃºmero', 'warning');\r\n      return;\r\n    }\r\n\r\n    if (this.password !== this.confirmPassword) {\r\n      await this.presentToast('Las contraseÃ±as no coinciden', 'danger');\r\n      return;\r\n    }\r\n\r\n    if (!this.validateName(this.firstName) || !this.validateName(this.lastName)) {\r\n      await this.presentToast('El nombre y apellido no deben contener caracteres especiales', 'warning');\r\n      return;\r\n    }\r\n\r\n    const userExists = this.users.some(user => user.email === this.email);\r\n\r\n    if (userExists) {\r\n      await this.presentToast('Este usuario ya estÃ¡ registrado', 'warning');\r\n    } else {\r\n      this.users.push({ \r\n        email: this.email, \r\n        password: this.password, \r\n        firstName: this.firstName, \r\n        lastName: this.lastName \r\n      });\r\n      await this.presentToast('Registro exitoso', 'success');\r\n      this.navCtrl.navigateForward('/home');  // Cambiado de /login a /home\r\n    }\r\n  }\r\n\r\n  validateEmail(email: string): boolean {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  }\r\n\r\n  validatePassword(password: string): boolean {\r\n    const passwordRegex = /^(?=.[A-Z])(?=.\\d).{8,30}$/;\r\n    return passwordRegex.test(password);\r\n  }\r\n\r\n  validateName(name: string): boolean {\r\n    const nameRegex = /^[a-zA-Z\\s]+$/;\r\n    return nameRegex.test(name);\r\n  }\r\n\r\n  async presentToast(message: string, color: string) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n      position: 'bottom',\r\n      color: color\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  goToHome() {  // Cambiado de goToLogin a goToHome\r\n    this.navCtrl.navigateForward('/home');\r\n  }\r\n}"
      },
      "services": {
        "cart.service.spec.ts": "import { TestBed } from '@angular/core/testing';\r\n\r\nimport { CartService } from './cart.service';\r\n\r\ndescribe('CartService', () => {\r\n  let service: CartService;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({});\r\n    service = TestBed.inject(CartService);\r\n  });\r\n\r\n  it('should be created', () => {\r\n    expect(service).toBeTruthy();\r\n  });\r\n});\r\n",
        "cart.service.ts": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Vinyl as BaseVinyl } from '../models/vinilos.model';  // Importa la interfaz base\r\n\r\n\r\nexport interface CartVinyl extends BaseVinyl {\r\n  quantity: number;  // Hacemos quantity requerido para los items del carrito\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private cart: CartVinyl[] = [];\r\n  private cartSubject = new BehaviorSubject<CartVinyl[]>([]);\r\n\r\n  constructor() { }\r\n\r\n  getCart() {\r\n    return this.cartSubject.asObservable();\r\n  }\r\n\r\n  addToCart(vinyl: BaseVinyl) {\r\n    const existingVinyl = this.cart.find(item => item.id === vinyl.id);\r\n    if (existingVinyl) {\r\n      existingVinyl.quantity += 1;\r\n    } else {\r\n      const cartItem: CartVinyl = { ...vinyl, quantity: 1 };\r\n      this.cart.push(cartItem);\r\n    }\r\n    this.cartSubject.next(this.cart);\r\n  }\r\n\r\n  removeFromCart(vinylId: number) {\r\n    this.cart = this.cart.filter(item => item.id !== vinylId);\r\n    this.cartSubject.next(this.cart);\r\n  }\r\n\r\n  clearCart() {\r\n    this.cart = [];\r\n    this.cartSubject.next(this.cart);\r\n  }\r\n\r\n  getTotal() {\r\n    return this.cart.reduce((total, item) => total + (item.precio * item.quantity), 0);\r\n  }\r\n\r\n  getCartItemCount() {\r\n    return this.cart.reduce((count, item) => count + item.quantity, 0);\r\n  }\r\n}",
        "database.service.spec.ts": "import { TestBed } from '@angular/core/testing';\r\n\r\nimport { DatabaseService } from './database.service';\r\n\r\ndescribe('DatabaseService', () => {\r\n  let service: DatabaseService;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({});\r\n    service = TestBed.inject(DatabaseService);\r\n  });\r\n\r\n  it('should be created', () => {\r\n    expect(service).toBeTruthy();\r\n  });\r\n});",
        "database.service.ts": "import { Injectable } from '@angular/core';\r\nimport { Platform, AlertController } from '@ionic/angular';\r\nimport { BehaviorSubject, Observable, from, of } from 'rxjs';\r\nimport { map, catchError, switchMap, tap } from 'rxjs/operators';\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { CapacitorSQLite, SQLiteConnection, SQLiteDBConnection } from '@capacitor-community/sqlite';\r\nimport { User } from '../models/user.model';\r\nimport { Vinyl } from '../models/vinilos.model';\r\nimport { Order } from '../models/order.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DatabaseService {\r\n  private database!: SQLiteDBConnection;\r\n  private dbReady: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  private sqlite: SQLiteConnection;\r\n\r\n  constructor(\r\n    private platform: Platform,\r\n    private alertController: AlertController\r\n  ) {\r\n    this.sqlite = new SQLiteConnection(CapacitorSQLite);\r\n    this.platform.ready().then(() => {\r\n      this.initializeDatabase();\r\n    });\r\n  }\r\n\r\n  private async initializeDatabase() {\r\n    const dbName = 'vinilos.db';\r\n    try {\r\n      const retCC = await this.sqlite.checkConnectionsConsistency();\r\n      const isConn = (await this.sqlite.isConnection(dbName, false)).result;\r\n      let db: SQLiteDBConnection;\r\n      if (retCC.result && isConn) {\r\n        db = await this.sqlite.retrieveConnection(dbName, false);\r\n      } else {\r\n        db = await this.sqlite.createConnection(dbName, false, \"no-encryption\", 1, false);\r\n      }\r\n      await db.open();\r\n      this.database = db;\r\n      await this.createTables();\r\n      await this.insertSeedData().toPromise();\r\n      this.dbReady.next(true);\r\n    } catch (error) {\r\n      console.error('Error initializing database', error);\r\n      await this.presentAlert('Error', 'Failed to initialize the database. Please try again.');\r\n    }\r\n  }\r\n\r\n  isDatabaseReady(): Observable<boolean> {\r\n    return this.dbReady.asObservable();\r\n  }\r\n\r\n  private async createTables() {\r\n    const tables = [this.tableUsers, this.tableVinyls, this.tableOrders];\r\n    for (const table of tables) {\r\n      await this.database.run(table);\r\n    }\r\n  }\r\n\r\n  private tableUsers: string = `\r\n    CREATE TABLE IF NOT EXISTS Users (\r\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n      name TEXT NOT NULL,\r\n      email TEXT UNIQUE,\r\n      phoneNumber TEXT,\r\n      createdAt DATETIME DEFAULT CURRENT_TIMESTAMP\r\n    );`;\r\n\r\n  private tableVinyls: string = `\r\n    CREATE TABLE IF NOT EXISTS Vinyls (\r\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n      titulo TEXT NOT NULL,\r\n      artista TEXT NOT NULL,\r\n      imagen TEXT,\r\n      descripcion TEXT,\r\n      tracklist TEXT,\r\n      stock INTEGER NOT NULL,\r\n      precio REAL NOT NULL,\r\n      IsAvailable BOOLEAN DEFAULT 1\r\n    );`;\r\n\r\n  private tableOrders: string = `\r\n    CREATE TABLE IF NOT EXISTS Orders (\r\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n      userId INTEGER,\r\n      createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n      status TEXT NOT NULL,\r\n      totalAmount REAL NOT NULL,\r\n      orderDetails TEXT NOT NULL,\r\n      FOREIGN KEY (userId) REFERENCES Users(id)\r\n    );`;\r\n\r\n  async presentAlert(titulo: string, msj: string) {\r\n    const alert = await this.alertController.create({\r\n      header: titulo,\r\n      message: msj,\r\n      buttons: ['OK'],\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  private executeSQL(query: string, params: any[] = []): Observable<any> {\r\n    return this.isDatabaseReady().pipe(\r\n      switchMap(ready => {\r\n        if (ready) {\r\n          return from(this.database.query(query, params));\r\n        } else {\r\n          throw new Error('Database not ready');\r\n        }\r\n      }),\r\n      catchError(error => {\r\n        console.error('SQL execution error', error);\r\n        return from([]);\r\n      })\r\n    );\r\n  }\r\n\r\n  // User methods\r\n  createUser(user: User): Observable<number> {\r\n    return this.executeSQL(\r\n      'INSERT INTO Users (name, email, phoneNumber) VALUES (?, ?, ?)',\r\n      [user.name, user.email, user.phoneNumber]\r\n    ).pipe(\r\n      map(data => data.changes?.lastId || -1)\r\n    );\r\n  }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.executeSQL('SELECT * FROM Users').pipe(\r\n      map(data => data.values as User[])\r\n    );\r\n  }\r\n\r\n  // Vinyl methods\r\n  createVinyl(vinyl: Vinyl): Observable<number> {\r\n    return this.executeSQL(\r\n      'INSERT INTO Vinyls (titulo, artista, imagen, descripcion, tracklist, stock, precio, IsAvailable) VALUES (?, ?, ?, ?, ?, ?, ?, ?)',\r\n      [vinyl.titulo, vinyl.artista, vinyl.imagen, JSON.stringify(vinyl.descripcion), JSON.stringify(vinyl.tracklist), vinyl.stock, vinyl.precio, vinyl.IsAvailable ? 1 : 0]\r\n    ).pipe(\r\n      map(data => data.changes?.lastId || -1)\r\n    );\r\n  }\r\n\r\n  getVinyls(): Observable<Vinyl[]> {\r\n    console.log('Intentando obtener vinilos de la base de datos');\r\n    return this.executeSQL('SELECT * FROM Vinyls').pipe(\r\n      tap(data => console.log('Datos crudos de la base de datos:', data)),\r\n      map(data => {\r\n        if (!data.values || data.values.length === 0) {\r\n          console.log('No se encontraron vinilos en la base de datos');\r\n          return [];\r\n        }\r\n        console.log('NÃºmero de vinilos encontrados:', data.values.length);\r\n        return (data.values as any[]).map(item => ({\r\n          ...item,\r\n          descripcion: JSON.parse(item.descripcion),\r\n          tracklist: JSON.parse(item.tracklist),\r\n          IsAvailable: item.IsAvailable === 1\r\n        }));\r\n      }),\r\n      tap(vinyls => console.log('Vinilos procesados:', vinyls))\r\n    );\r\n  }\r\n\r\n  // Order methods\r\n  createOrder(order: Order): Observable<number> {\r\n    return this.executeSQL(\r\n      'INSERT INTO Orders (userId, status, totalAmount, orderDetails) VALUES (?, ?, ?, ?)',\r\n      [order.userId, order.status, order.totalAmount, JSON.stringify(order.orderDetails)]\r\n    ).pipe(\r\n      map(data => data.changes?.lastId || -1)\r\n    );\r\n  }\r\n\r\n  getOrders(userId?: number): Observable<Order[]> {\r\n    let query = 'SELECT * FROM Orders';\r\n    let params: any[] = [];\r\n    \r\n    if (userId) {\r\n      query += ' WHERE userId = ?';\r\n      params.push(userId);\r\n    }\r\n    \r\n    return this.executeSQL(query, params).pipe(\r\n      map(data => {\r\n        return (data.values as any[]).map(item => ({\r\n          ...item,\r\n          orderDetails: JSON.parse(item.orderDetails)\r\n        }));\r\n      })\r\n    );\r\n  }\r\n\r\n  // Update vinyl stock\r\n  updateVinylStock(vinylId: number, newStock: number): Observable<boolean> {\r\n    return this.executeSQL(\r\n      'UPDATE Vinyls SET stock = ? WHERE id = ?',\r\n      [newStock, vinylId]\r\n    ).pipe(\r\n      map(() => true),\r\n      catchError(() => from([false]))\r\n    );\r\n  }\r\n\r\n  insertSeedData(): Observable<boolean> {\r\n    console.log('Iniciando inserciÃ³n de datos de prueba');\r\n    const users = [\r\n      { name: 'Usuario Ejemplo', email: 'usuario@example.com', phoneNumber: '966189340' ,createdAt: '2021-07-01 10:00:00' },\r\n    ];\r\n  \r\n    const products: Vinyl[] = [\r\n      { \r\n        titulo: 'Hit me hard & soft', \r\n        artista: 'Billie Eilish', \r\n        imagen: 'assets/img/hitme.jpg', \r\n        descripcion: [\r\n          'El tercer Ã¡lbum de estudio de Billie Eilish, Â«HIT ME HARD AND SOFTÂ», lanzado a travÃ©s de Darkroom/Interscope Records, es su trabajo mÃ¡s atrevido hasta la fecha, una colecciÃ³n diversa pero cohesiva de canciones, idealmente escuchadas en su totalidad, de principio a fin.',\r\n          'Exactamente como sugiere el tÃ­tulo del Ã¡lbum; te golpea fuerte y suave tanto lÃ­rica como sonoramente, mientras cambia gÃ©neros y desafÃ­a tendencias a lo largo del camino.',\r\n          'Con la ayuda de su hermano y Ãºnico colaborador, FINNEAS, la pareja escribiÃ³, grabÃ³ y produjo el Ã¡lbum juntos en su ciudad natal de Los Ãngeles.',\r\n          'Este Ã¡lbum llega inmediatamente despuÃ©s de sus dos Ã¡lbumes de gran Ã©xito, Â«WHEN WE ALL FALL ASLEEP WHERE DO WE GO?Â» y Â«Happier Than EverÂ», y trabaja para desarrollar aÃºn mÃ¡s el mundo de Billie Eilish.'\r\n        ],\r\n        tracklist: [\r\n          'Skinny',\r\n          'Lunch',\r\n          'Chihiro',\r\n          'Birds Of A Feather',\r\n          'Wildflower',\r\n          'The Greatest',\r\n          'LAmour De Ma Vie',\r\n          'The Diner',\r\n          'Bittersuite',\r\n          'Blue'\r\n        ],\r\n        stock: 10,\r\n        precio: 5.00,\r\n        IsAvailable: true \r\n      },\r\n    ];\r\n  \r\n    return from(Promise.all([\r\n      ...users.map(user => \r\n        this.database.run(\r\n          'INSERT OR REPLACE INTO Users (name, email, phoneNumber, createdAt) VALUES (?, ?, ?, ?)', \r\n          [user.name, user.email, user.phoneNumber, user.createdAt]\r\n        ).then(() => console.log(`Usuario insertado: ${user.name}`))\r\n      ),\r\n      ...products.map(vinyl => \r\n        this.database.run(\r\n          'INSERT OR REPLACE INTO Vinyls (titulo, artista, imagen, descripcion, tracklist, stock, precio, IsAvailable) VALUES (?, ?, ?, ?, ?, ?, ?, ?)', \r\n          [vinyl.titulo, vinyl.artista, vinyl.imagen, JSON.stringify(vinyl.descripcion), JSON.stringify(vinyl.tracklist), vinyl.stock, vinyl.precio, vinyl.IsAvailable ? 1 : 0]\r\n        ).then(() => console.log(`Vinilo insertado: ${vinyl.titulo}`))\r\n      )\r\n    ])).pipe(\r\n      map(() => {\r\n        console.log('Datos de prueba insertados correctamente');\r\n        return true;\r\n      }),\r\n      catchError(error => {\r\n        console.error('Error en insertSeedData:', error);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}"
      },
      "vinilo-crud": {
        "vinilo-crud-routing.module.ts": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViniloCrudPage } from './vinilo-crud.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ViniloCrudPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ViniloCrudPageRoutingModule {}\r\n",
        "vinilo-crud.module.ts": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ViniloCrudPageRoutingModule } from './vinilo-crud-routing.module';\r\n\r\nimport { ViniloCrudPage } from './vinilo-crud.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ViniloCrudPageRoutingModule\r\n  ],\r\n  declarations: [ViniloCrudPage]\r\n})\r\nexport class ViniloCrudPageModule {}\r\n",
        "vinilo-crud.page.html": "<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>GestiÃ³n de Vinilos</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-card>\r\n    <ion-card-header>\r\n      <ion-card-title>{{ modoEdicion ? 'Editar Vinilo' : 'Crear Nuevo Vinilo' }}</ion-card-title>\r\n    </ion-card-header>\r\n    <ion-card-content>\r\n      <ion-item>\r\n        <ion-label position=\"floating\">TÃ­tulo</ion-label>\r\n        <ion-input [ngModel]=\"getViniloActual().titulo\" (ngModelChange)=\"actualizarCampo('titulo', $event)\"></ion-input>\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-label position=\"floating\">Artista</ion-label>\r\n        <ion-input [ngModel]=\"getViniloActual().artista\" (ngModelChange)=\"actualizarCampo('artista', $event)\"></ion-input>\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-label position=\"floating\">Imagen URL</ion-label>\r\n        <ion-input [ngModel]=\"getViniloActual().imagen\" (ngModelChange)=\"actualizarCampo('imagen', $event)\"></ion-input>\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-label position=\"floating\">Stock</ion-label>\r\n        <ion-input type=\"number\" [ngModel]=\"getViniloActual().stock\" (ngModelChange)=\"actualizarCampo('stock', $event)\"></ion-input>\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-label position=\"floating\">Precio (CLP)</ion-label>\r\n        <ion-input type=\"number\" [ngModel]=\"getViniloActual().precio\" (ngModelChange)=\"actualizarCampo('precio', $event)\"></ion-input>\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-label position=\"floating\">DescripciÃ³n</ion-label>\r\n        <ion-textarea [ngModel]=\"getViniloActual().descripcion.join('\\n')\" (ngModelChange)=\"actualizarCampo('descripcion', $event.split('\\n'))\"></ion-textarea>\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-label position=\"floating\">Tracklist</ion-label>\r\n        <ion-textarea [ngModel]=\"getViniloActual().tracklist.join('\\n')\" (ngModelChange)=\"actualizarCampo('tracklist', $event.split('\\n'))\"></ion-textarea>\r\n      </ion-item>\r\n\r\n      <ion-button expand=\"block\" (click)=\"modoEdicion ? actualizarVinilo() : crearVinilo()\">\r\n        {{ modoEdicion ? 'Actualizar' : 'Crear' }}\r\n      </ion-button>\r\n      <ion-button *ngIf=\"modoEdicion\" expand=\"block\" (click)=\"cancelarEdicion()\" color=\"danger\">\r\n        Cancelar EdiciÃ³n\r\n      </ion-button>\r\n    </ion-card-content>\r\n  </ion-card>\r\n\r\n  <ion-list>\r\n    <ion-item-sliding *ngFor=\"let vinilo of vinilos\">\r\n      <ion-item>\r\n        <ion-thumbnail slot=\"start\">\r\n          <img [src]=\"vinilo.imagen\" />\r\n        </ion-thumbnail>\r\n        <ion-label>\r\n          <h2>{{ vinilo.titulo }}</h2>\r\n          <p>{{ vinilo.artista }}</p>\r\n          <p>Stock: {{ vinilo.stock }} | Precio: {{ vinilo.precio | currency:'CLP':'symbol-narrow':'1.0-0' }}</p>\r\n          <p><strong>DescripciÃ³n:</strong> {{ vinilo.descripcion.join(' ') }}</p>\r\n          <p><strong>Tracklist:</strong> {{ vinilo.tracklist.join(', ') }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n      <ion-item-options side=\"end\">\r\n        <ion-item-option (click)=\"editarVinilo(vinilo)\" color=\"primary\">\r\n          <ion-icon name=\"create\" slot=\"icon-only\"></ion-icon>\r\n        </ion-item-option>\r\n        <ion-item-option (click)=\"eliminarVinilo(vinilo)\" color=\"danger\">\r\n          <ion-icon name=\"trash\" slot=\"icon-only\"></ion-icon>\r\n        </ion-item-option>\r\n      </ion-item-options>\r\n    </ion-item-sliding>\r\n  </ion-list>\r\n</ion-content>",
        "vinilo-crud.page.scss": "// Variables de colores\r\n$primary-color: #8B4513; // Saddle Brown\r\n$secondary-color: #DEB887; // Burlywood\r\n$accent-color: #CD853F; // Peru\r\n$background-color: #FFF8DC; // Cornsilk\r\n$card-background: #FAEBD7; // Antique White\r\n$text-color: #3E2723; // Dark Brown\r\n$light-text-color: #FFF8DC; // Cornsilk\r\n\r\n@mixin vintage-border {\r\n  border: 2px solid $primary-color;\r\n  box-shadow: 3px 3px 0 rgba($primary-color, 0.5);\r\n}\r\n\r\n// Global Styles\r\nion-content {\r\n  --background: #{$background-color};\r\n  font-family: 'Georgia', serif;\r\n}\r\n\r\nion-header {\r\n  ion-toolbar {\r\n    --background: #{$primary-color};\r\n  }\r\n\r\n  ion-title {\r\n    text-align: center;\r\n    font-size: 32px;\r\n    font-family: 'Playfair Display', serif;\r\n    color: $light-text-color;\r\n  }\r\n}\r\n\r\n// Card Styles for Vinilo Form\r\nion-card {\r\n  @include vintage-border;\r\n  background-color: $card-background;\r\n  margin: 16px;\r\n\r\n  ion-card-header {\r\n    background-color: $primary-color;\r\n    color: $light-text-color;\r\n\r\n    ion-card-title {\r\n      font-family: 'Playfair Display', serif;\r\n      font-size: 1.5em;\r\n    }\r\n  }\r\n\r\n  ion-card-content {\r\n    padding: 16px;\r\n\r\n    ion-item {\r\n      --background: transparent;\r\n      --border-color: #{$primary-color};\r\n      --color: #{$text-color};\r\n      margin-bottom: 8px;\r\n\r\n      ion-label {\r\n        color: $accent-color;\r\n      }\r\n\r\n      ion-input, ion-textarea {\r\n        --color: #{$text-color};\r\n        --placeholder-color: #{$secondary-color};\r\n      }\r\n    }\r\n\r\n    ion-button {\r\n      --background: #{$accent-color};\r\n      --color: #{$light-text-color};\r\n      margin-top: 16px;\r\n      @include vintage-border;\r\n      \r\n      &[color=\"danger\"] {\r\n        --background: #B22222; // FireBrick\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// List Styles\r\nion-list {\r\n  background-color: transparent;\r\n\r\n  ion-item-sliding {\r\n    background-color: $card-background;\r\n    margin-bottom: 8px;\r\n    @include vintage-border;\r\n\r\n    ion-item {\r\n      --background: transparent;\r\n      --border-color: transparent;\r\n\r\n      ion-thumbnail {\r\n        --size: 80px;\r\n        --border-radius: 0;\r\n        @include vintage-border;\r\n      }\r\n\r\n      ion-label {\r\n        h2 {\r\n          font-family: 'Playfair Display', serif;\r\n          color: $primary-color;\r\n          font-size: 1.2em;\r\n          font-weight: bold;\r\n        }\r\n\r\n        p {\r\n          color: $text-color;\r\n          font-size: 0.9em;\r\n          margin-top: 4px;\r\n\r\n          strong {\r\n            color: $accent-color;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    ion-item-options {\r\n      ion-item-option {\r\n        &[color=\"primary\"] {\r\n          --ion-color-base: #{$accent-color};\r\n        }\r\n        &[color=\"danger\"] {\r\n          --ion-color-base: #B22222; // FireBrick\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
        "vinilo-crud.page.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { ViniloCrudPage } from './vinilo-crud.page';\r\n\r\ndescribe('ViniloCrudPage', () => {\r\n  let component: ViniloCrudPage;\r\n  let fixture: ComponentFixture<ViniloCrudPage>;\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(ViniloCrudPage);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n",
        "vinilo-crud.page.ts": "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule, ToastController, AlertController, NavController } from '@ionic/angular';\r\nimport { addIcons } from 'ionicons';\r\nimport { addCircleOutline, createOutline, trashOutline, listOutline } from 'ionicons/icons';\r\n\r\ninterface Vinilo {\r\n  id: number;\r\n  titulo: string;\r\n  artista: string;\r\n  imagen: string;\r\n  descripcion: string[];\r\n  tracklist: string[];\r\n  stock: number;\r\n  precio: number;\r\n}\r\n\r\ntype ViniloKeys = keyof Vinilo;\r\n\r\n@Component({\r\n  selector: 'app-vinilo-crud',\r\n  templateUrl: './vinilo-crud.page.html',\r\n  styleUrls: ['./vinilo-crud.page.scss'],\r\n})\r\nexport class ViniloCrudPage implements OnInit {\r\n  vinilos: Vinilo[] = [];\r\n  nuevoVinilo: Vinilo = this.inicializarNuevoVinilo();\r\n  modoEdicion = false;\r\n  viniloEditando: Vinilo | null = null;\r\n  activeSectionPage: 'add' | 'edit' | 'delete' | 'view' = 'view';\r\n\r\n  constructor(\r\n    private toastController: ToastController,\r\n    private alertController: AlertController,\r\n    private navCtrl: NavController\r\n  ) {\r\n    addIcons({ addCircleOutline, createOutline, trashOutline, listOutline });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadVinilos();\r\n  }\r\n\r\n  loadVinilos() {\r\n    this.vinilos = [\r\n      {\r\n        id: 1,\r\n        titulo: 'Sempiternal',\r\n        artista: 'Bring me the horizon',\r\n        imagen: 'assets/img/sempiternal.jpg',\r\n        descripcion: ['Ãlbum de rock alternativo lanzado en 2013'],\r\n        tracklist: ['Can You Feel My Heart', 'The House of Wolves', 'Empire (Let Them Sing)'],\r\n        stock: 10,\r\n        precio: 35990\r\n      },\r\n    ];\r\n  }\r\n\r\n  inicializarNuevoVinilo(): Vinilo {\r\n    return {\r\n      id: 0,\r\n      titulo: '',\r\n      artista: '',\r\n      imagen: '',\r\n      descripcion: [],\r\n      tracklist: [],\r\n      stock: 0,\r\n      precio: 0\r\n    };\r\n  }\r\n\r\n  getViniloActual(): Vinilo {\r\n    return this.modoEdicion ? this.viniloEditando! : this.nuevoVinilo;\r\n  }\r\n\r\n  actualizarCampo(campo: ViniloKeys, valor: any) {\r\n    const viniloActual = this.getViniloActual();\r\n    (viniloActual as any)[campo] = valor;\r\n  }\r\n\r\n  async crearVinilo() {\r\n    if (this.validarVinilo(this.nuevoVinilo)) {\r\n      this.nuevoVinilo.id = this.vinilos.length + 1;\r\n      this.vinilos.push({...this.nuevoVinilo});\r\n      await this.presentToast('Vinilo creado correctamente');\r\n      this.nuevoVinilo = this.inicializarNuevoVinilo();\r\n    } else {\r\n      await this.mostrarAlerta('Error', 'Por favor, completa todos los campos requeridos y asegÃºrate de que el stock y el precio sean mayores que cero.');\r\n    }\r\n  }\r\n\r\n  validarVinilo(vinilo: Vinilo): boolean {\r\n    return (\r\n      vinilo.titulo.trim() !== '' &&\r\n      vinilo.artista.trim() !== '' &&\r\n      vinilo.descripcion.length > 0 &&\r\n      vinilo.tracklist.length > 0 &&\r\n      vinilo.stock > 0 &&\r\n      vinilo.precio > 0\r\n    );\r\n  }\r\n\r\n  editarVinilo(vinilo: Vinilo) {\r\n    this.modoEdicion = true;\r\n    this.viniloEditando = {...vinilo};\r\n    this.activeSectionPage = 'edit';\r\n  }\r\n\r\n  async actualizarVinilo() {\r\n    if (this.viniloEditando && this.validarVinilo(this.viniloEditando)) {\r\n      const index = this.vinilos.findIndex(v => v.id === this.viniloEditando!.id);\r\n      if (index !== -1) {\r\n        this.vinilos[index] = {...this.viniloEditando};\r\n        this.modoEdicion = false;\r\n        this.viniloEditando = null;\r\n        await this.presentToast('Vinilo actualizado correctamente');\r\n        this.activeSectionPage = 'view';\r\n      }\r\n    } else {\r\n      await this.mostrarAlerta('Error', 'Por favor, completa todos los campos requeridos y asegÃºrate de que el stock y el precio sean mayores que cero.');\r\n    }\r\n  }\r\n\r\n  async eliminarVinilo(vinilo: Vinilo) {\r\n    const alert = await this.alertController.create({\r\n      header: 'Confirmar eliminaciÃ³n',\r\n      message: `Â¿EstÃ¡s seguro de que quieres eliminar ${vinilo.titulo}?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: 'Eliminar',\r\n          handler: () => {\r\n            this.vinilos = this.vinilos.filter(v => v.id !== vinilo.id);\r\n            this.presentToast('Vinilo eliminado correctamente');\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  cancelarEdicion() {\r\n    this.modoEdicion = false;\r\n    this.viniloEditando = null;\r\n    this.activeSectionPage = 'view';\r\n  }\r\n\r\n  async presentToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n      position: 'bottom'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async mostrarAlerta(header: string, message: string) {\r\n    const alert = await this.alertController.create({\r\n      header,\r\n      message,\r\n      buttons: ['OK']\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  setActiveSection(section: 'add' | 'edit' | 'delete' | 'view') {\r\n    this.activeSectionPage = section;\r\n    if (section !== 'edit') {\r\n      this.cancelarEdicion();\r\n    }\r\n  }\r\n}"
      },
      "vinilos": {
        "vinilos-routing.module.ts": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { VinilosPage } from './vinilos.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: VinilosPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class VinilosPageRoutingModule {}\r\n",
        "vinilos.module.ts": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { VinilosPageRoutingModule } from './vinilos-routing.module';\r\nimport { VinilosPage } from './vinilos.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    VinilosPageRoutingModule\r\n  ],\r\n  declarations: [VinilosPage]\r\n})\r\nexport class VinilosPageModule {}",
        "vinilos.page.html": "<ion-header [translucent]=\"true\">\r\n  <ion-toolbar>\r\n    <ion-title>Vinilos</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-searchbar class=\"custom\" placeholder=\"Buscar\" (ionInput)=\"buscarVinilos($event)\"></ion-searchbar>\r\n\r\n  <ion-grid>\r\n    <ion-row>\r\n      <ion-col size=\"6\" size-md=\"4\" size-lg=\"3\" *ngFor=\"let vinilo of vinilosFiltrados\">\r\n        <ion-card (click)=\"mostrarDescripcion(vinilo)\">\r\n          <img [src]=\"vinilo.imagen\" [alt]=\"vinilo.titulo\">\r\n          <ion-card-header>\r\n            <ion-card-title>{{ vinilo.titulo }}</ion-card-title>\r\n            <ion-card-subtitle>{{ vinilo.artista }}</ion-card-subtitle>\r\n          </ion-card-header>\r\n        </ion-card>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n\r\n  <ion-modal [isOpen]=\"!!viniloSeleccionado\">\r\n    <ng-template>\r\n      <ion-header>\r\n        <ion-toolbar>\r\n          <ion-title>{{ viniloSeleccionado?.titulo }}</ion-title>\r\n          <ion-buttons slot=\"end\">\r\n            <ion-button (click)=\"cerrarDescripcion()\">Cerrar</ion-button>\r\n          </ion-buttons>\r\n        </ion-toolbar>\r\n      </ion-header>\r\n      <ion-content class=\"ion-padding\">\r\n        <img [src]=\"viniloSeleccionado?.imagen\" [alt]=\"viniloSeleccionado?.titulo\">\r\n        <h2>{{ viniloSeleccionado?.artista }}</h2>\r\n\r\n        <ion-segment [(ngModel)]=\"mostrarDescripcionDetalle\">\r\n          <ion-segment-button value=\"descripcion\">\r\n            DescripciÃ³n\r\n          </ion-segment-button>\r\n          <ion-segment-button value=\"tracklist\">\r\n            Tracklist\r\n          </ion-segment-button>\r\n        </ion-segment>\r\n\r\n        <div *ngIf=\"mostrarDescripcionDetalle === 'descripcion'\">\r\n          <p [innerHTML]=\"getDescripcionTexto(viniloSeleccionado)\"></p>\r\n        </div>\r\n\r\n        <div *ngIf=\"mostrarDescripcionDetalle === 'tracklist'\">\r\n          <h3>Tracklist</h3>\r\n          <ol>\r\n            <li *ngFor=\"let cancion of viniloSeleccionado?.tracklist\">\r\n              {{ cancion }}\r\n            </li>\r\n          </ol>\r\n        </div>\r\n\r\n        <ion-text color=\"primary\">\r\n          <h3>Precio: {{ viniloSeleccionado?.precio | currency:'CLP':'symbol-narrow':'1.0-0' }}</h3>\r\n        </ion-text>\r\n        <ion-text color=\"medium\">\r\n          <p>Stock disponible: {{ viniloSeleccionado?.stock ?? 'N/A' }}</p>\r\n        </ion-text>\r\n        <ion-button expand=\"block\" (click)=\"agregarAlCarrito()\" [disabled]=\"viniloSeleccionado?.stock === 0\">\r\n          Agregar al carrito\r\n        </ion-button>\r\n      </ion-content>\r\n    </ng-template>\r\n  </ion-modal>\r\n</ion-content>",
        "vinilos.page.scss": "// Variables de colores\r\n$primary-color: #8B4513; // Saddle Brown\r\n$secondary-color: #DEB887; // Burlywood\r\n$accent-color: #CD853F; // Peru\r\n$background-color: #FFF8DC; // Cornsilk\r\n$card-background: #FAEBD7; // Antique White\r\n$text-color: #3E2723; // Dark Brown\r\n$light-text-color: #FFF8DC; // Cornsilk\r\n\r\n@mixin vintage-border {\r\n  border: 2px solid $primary-color;\r\n  box-shadow: 3px 3px 0 rgba($primary-color, 0.5);\r\n}\r\n\r\n// Global Styles\r\nion-content {\r\n  --background: #{$background-color};\r\n  font-family: 'Georgia', serif;\r\n}\r\n\r\nion-header {\r\n  ion-toolbar {\r\n    --background: #{$primary-color};\r\n  }\r\n\r\n  ion-title {\r\n    text-align: center;\r\n    font-size: 32px;\r\n    font-family: 'Playfair Display', serif;\r\n    color: $light-text-color;\r\n  }\r\n}\r\n\r\n// Searchbar estilo\r\nion-searchbar.custom {\r\n  --background: #{$card-background};\r\n  --color: #{$text-color};\r\n  --placeholder-color: #{$accent-color};\r\n  --icon-color: #{$primary-color};\r\n  --border-radius: 0;\r\n  @include vintage-border;\r\n  margin: 16px auto;\r\n  max-width: 600px;\r\n  width: calc(100% - 32px);\r\n  \r\n  .searchbar-input {\r\n    padding-inline-start: 44px !important;\r\n    padding-inline-end: 44px !important;\r\n  }\r\n\r\n  .searchbar-search-icon {\r\n    left: 12px;\r\n  }\r\n\r\n  .searchbar-clear-button {\r\n    right: 12px;\r\n  }\r\n}\r\n\r\nion-grid {\r\n  padding: 16px;\r\n}\r\n\r\n// Estilo de las cards\r\nion-card {\r\n  margin: 8px;\r\n  cursor: pointer;\r\n  @include vintage-border;\r\n  background-color: $card-background;\r\n  border-radius: 0;\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n  }\r\n\r\n  img {\r\n    max-height: 220px;\r\n    object-fit: cover;\r\n    width: 100%;\r\n    filter: sepia(20%);\r\n  }\r\n\r\n  ion-card-header {\r\n    padding: 16px;\r\n  }\r\n\r\n  ion-card-title {\r\n    font-size: 1.2em;\r\n    font-weight: 600;\r\n    color: $text-color;\r\n    font-family: 'Playfair Display', serif;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  ion-card-subtitle {\r\n    font-size: 1em;\r\n    color: $accent-color;\r\n    font-style: italic;\r\n  }\r\n}\r\n\r\n// Modal Styles\r\nion-modal {\r\n  --background: #{$background-color};\r\n  \r\n  ion-header ion-toolbar {\r\n    --background: #{$primary-color};\r\n\r\n    ion-title {\r\n      color: $light-text-color;\r\n    }\r\n\r\n    ion-button {\r\n      --color: #{$light-text-color};\r\n    }\r\n  }\r\n  \r\n  ion-content {\r\n    --padding-top: 24px;\r\n    --padding-bottom: 24px;\r\n    --padding-start: 24px;\r\n    --padding-end: 24px;\r\n  }\r\n  \r\n  img {\r\n    @include vintage-border;\r\n    width: 100%;\r\n    max-height: 300px;\r\n    object-fit: cover;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  h2 {\r\n    color: $primary-color;\r\n    font-family: 'Playfair Display', serif;\r\n    font-size: 24px;\r\n    margin-bottom: 16px;\r\n  }\r\n  \r\n  ion-segment {\r\n    margin-top: 24px;\r\n    margin-bottom: 24px;\r\n    --background: #{$card-background};\r\n    \r\n    ion-segment-button {\r\n      --color: #{$text-color};\r\n      --color-checked: #{$light-text-color};\r\n      --background-checked: #{$accent-color};\r\n      font-family: 'Georgia', serif;\r\n    }\r\n  }\r\n  \r\n  p {\r\n    color: $text-color;\r\n    font-size: 16px;\r\n    line-height: 1.6;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  h3 {\r\n    color: $primary-color;\r\n    font-family: 'Playfair Display', serif;\r\n    font-size: 20px;\r\n    margin-top: 24px;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  ol {\r\n    padding-left: 24px;\r\n    color: $text-color;\r\n\r\n    li {\r\n      margin-bottom: 8px;\r\n    }\r\n  }\r\n  \r\n  ion-text {\r\n    h3 {\r\n      color: $accent-color;\r\n      font-size: 22px;\r\n      font-weight: bold;\r\n      margin-top: 24px;\r\n    }\r\n\r\n    p {\r\n      color: $text-color;\r\n      font-style: italic;\r\n    }\r\n  }\r\n  \r\n  ion-button {\r\n    margin-top: 24px;\r\n    --background: #{$accent-color};\r\n    --color: #{$light-text-color};\r\n    --border-radius: 0;\r\n    @include vintage-border;\r\n    font-family: 'Georgia', serif;\r\n\r\n    &[disabled] {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n}",
        "vinilos.page.spec.ts": "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { VinilosPage } from './vinilos.page';\r\n\r\ndescribe('VinilosPage', () => {\r\n  let component: VinilosPage;\r\n  let fixture: ComponentFixture<VinilosPage>;\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(VinilosPage);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n",
        "vinilos.page.ts": "import { Component, OnInit } from '@angular/core';\r\nimport { CartService } from '../services/cart.service';\r\nimport { NavController, ToastController } from '@ionic/angular';\r\nimport { DatabaseService } from '../services/database.service';\r\nimport { Vinyl } from '../models/vinilos.model';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-vinilos',\r\n  templateUrl: './vinilos.page.html',\r\n  styleUrls: ['./vinilos.page.scss'],\r\n})\r\nexport class VinilosPage implements OnInit {\r\n  vinilos: Vinyl[] = [];\r\n  vinilosFiltrados: Vinyl[] = [];\r\n  viniloSeleccionado: Vinyl | null = null;\r\n  mostrarDescripcionDetalle: 'descripcion' | 'tracklist' = 'descripcion';\r\n\r\n  constructor(\r\n    private cartService: CartService,\r\n    private navCtrl: NavController,\r\n    private databaseService: DatabaseService,\r\n    private toastController: ToastController\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    await this.cargarVinilos();\r\n  }\r\n\r\n  async cargarVinilos() {\r\n    try {\r\n      console.log('Iniciando carga de vinilos');\r\n      const vinilosFromDB = await firstValueFrom(this.databaseService.getVinyls());\r\n      console.log('Vinilos obtenidos de la base de datos:', vinilosFromDB);\r\n      \r\n      this.vinilos = vinilosFromDB || [];\r\n      this.vinilosFiltrados = this.vinilos;\r\n      \r\n      if (this.vinilos.length === 0) {\r\n        console.log('No se encontraron vinilos en la base de datos');\r\n        await this.presentToast('No se encontraron vinilos en la base de datos.', 'warning');\r\n      } else {\r\n        console.log(`Se cargaron ${this.vinilos.length} vinilos`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al cargar vinilos:', error);\r\n      await this.presentToast('Error al cargar vinilos. Por favor, intente mÃ¡s tarde.', 'danger');\r\n    }\r\n  }\r\n\r\n  buscarVinilos(event: any) {\r\n    const textoBusqueda = event.target.value.toLowerCase();\r\n\r\n    if (textoBusqueda && textoBusqueda.trim() !== '') {\r\n      this.vinilosFiltrados = this.vinilos.filter(vinilo =>\r\n        vinilo.titulo.toLowerCase().includes(textoBusqueda) ||\r\n        vinilo.artista.toLowerCase().includes(textoBusqueda)\r\n      );\r\n    } else {\r\n      this.vinilosFiltrados = this.vinilos;\r\n    }\r\n  }\r\n\r\n  mostrarDescripcion(vinilo: Vinyl) {\r\n    this.viniloSeleccionado = vinilo;\r\n    this.mostrarDescripcionDetalle = 'descripcion';\r\n  }\r\n\r\n  getDescripcionTexto(vinilo: Vinyl | null): string {\r\n    if (!vinilo) return '';\r\n    return Array.isArray(vinilo.descripcion) ? vinilo.descripcion.join('<br>') : vinilo.descripcion;\r\n  }\r\n\r\n  cerrarDescripcion() {\r\n    this.viniloSeleccionado = null;\r\n  }\r\n\r\n  async agregarAlCarrito() {\r\n    if (this.viniloSeleccionado && this.viniloSeleccionado.id !== undefined) {\r\n      try {\r\n        await firstValueFrom(this.databaseService.updateVinylStock(this.viniloSeleccionado.id, this.viniloSeleccionado.stock - 1));\r\n        \r\n        const viniloParaCarrito: Vinyl & { id: number } = {\r\n          ...this.viniloSeleccionado,\r\n          id: this.viniloSeleccionado.id\r\n        };\r\n        \r\n        this.cartService.addToCart(viniloParaCarrito);\r\n        await this.presentToast(`${this.viniloSeleccionado.titulo} agregado al carrito`);\r\n        \r\n        await this.cargarVinilos();\r\n        \r\n        this.cerrarDescripcion();\r\n      } catch (error) {\r\n        console.error('Error al agregar al carrito:', error);\r\n        await this.presentToast('Error al agregar al carrito. Por favor, intente de nuevo.', 'danger');\r\n      }\r\n    } else {\r\n      await this.presentToast('No se puede agregar este vinilo al carrito.', 'danger');\r\n    }\r\n  }\r\n\r\n  async presentToast(message: string, color: string = 'success') {\r\n    const toast = await this.toastController.create({\r\n      message: message,\r\n      duration: 2000,\r\n      position: 'bottom',\r\n      color: color\r\n    });\r\n    toast.present();\r\n  }\r\n}"
      }
    }
  }
}